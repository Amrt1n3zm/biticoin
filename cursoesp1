
1 centralizacion Vs descentralizacion
2 consenso distribuido
3 consenso sin identidades , la cadena de bloques block chain
4 incentivos y prueba de trabajo.
5 unir todos estos conceptos.

1 centralizacion Vs descentralizacion.

se comparan los paradigmas de centralizado frente a  descentralizado ,teniendo en cuenta que nada es puramente centralizado 
sino una aproximacion , por ejemplo los servicios de email son un protocolo descentralizado pero se acceden via servicios de
webmail y estos si son centralizados. no es O Todo O nada. 
5 preguntas :

the technical aspects  . los aspectos tecnicos de la descentralizacion de bitcoin 


1 quien mantiene la cadena 

2 quien tiene autoridad para validar las transaciones o movimientos altas en la cadena.

3 quien crea nuevos bitcoins como se generan y que representan ,como funciona su proceso de generacion

4 quien determina como cambian las reglas del suystema , como evolucionan las propuestas  de cambio y que genrean soft y hard forks.

5 como los bitcoins genreados son evaluados como adquieren su valor dentro del mercado de intercambio. 

6 mas alla del protocolo estan las exchanges wasllet software, proveedores de servicio...


estos son los COMPONENTES DE LA DESCENTRALIZACION.
empecemos con las tres primeras, para entender lo que queremos definir como descentralizacion


1 quien mantiene la cadena 

2 quien tiene autoridad para validar las transaciones o movimientos altas en la cadena.

3 quien crea nuevos bitcoins como se generan y que representan ,como funciona su proceso de generacion

4 quien determina como cambian las reglas del suystema , como evolucionan las propuestas  de cambio y que genrean soft y hard forks.

5 como los bitcoins genreados son evaluados como adquieren su valor dentro del mercado de intercambio.

este protocolo soporta . 

intercambiadores como servicio ,

software de monederos o carteras ,wallets. 

proveedores de servicios

estos son los COMPONENTES DE LA DESCENTRALIZACION.
empecemos con las tres primeras, para entender lo que queremos definir como descentralizacion


a peer to peer network : abierta a todos y con requerimientos minimos
   miles de nodos sincronizados donde cualquiera con un pc puede participar en los procesos de validacion y 
   verificacion
    de transaciones asi como minar por medio de la participacion en el concurso de prueba de trabajao que 
    variara con el tiempo y que veremos mas adelante. https://es.wikipedia.org/wiki/Peer-to-peer 


b minado: abierta a todos pero inevitables concentraciones de poder debido a la relacion directa con los recursos a
consumir alta centralizacion o concentracion de poder en este ecosistema , no deseable .





c actualizaciones del core o nucleo del sistema bitcoincore: los creadores del codigo y la comunidad de desarrolladores 
   concentran un gran poder de decisiones. cambios reglas conceptualamente cualqueira aque rune un nodo no puede cambiar nada, 
 





2 consenso distribuido:

composicion de las 3 primeras.

bitcoin exchanges wallet service y correos servicos de desarrolo hibridos desdecntralizado centralizado.

nivel tecnico consenso distribuido la clave de cambio es una clase de portocolos, protocolos bases ya usados en 
decadas de investigacion para llegar a los protocolos de consenso.


por ejemplo google o facebook cuentan con una gran cantidad de servidorees ofreciendo servicos de modo centralizado
como una base de datos masiva distribuida.
registra los cambios  independientes .servers con copias redundantes.
si cualquiera cae otros la levantan .similar a las rutas bgp en los mikrokit routers autenticas maquinas controladoras de  internet.

distribuido consenso.
creando una masiva red de consenso distribuyendo el valor clave,a gran escala .

ejemplo base de datos dns ip distribuido.
public key an email .

transferencias entre cuentas stock trades









05:02
consensus so what am I talking about here at a technical level the key challenge that you have to solve to
build a distributed ecash system is called distributed consensus and this is

a class of protocols that's been studied for decades in the in the computer science literature so but intuitively
you can think of it as our goal being to decentralize cruge coin which is the
hypothetical currency that we saw in the first lecture so as I said there's
decades of research in computer science traditional motivating application for
this is reliability and distributed systems what do I mean by that imagineon these consensus protocols and the



¿por qué protocolos de consenso?

1 confianza y ewstabilidad en sistemas distribuidos como motyivacion tradicional

2 almacen distribuido de claves : permitiendo varias aplicaciones como DNS , directorios de claves publicas, stock trades


un enorme almacen de claves para aplicaciones varias.
tecnicamente seria como tener un numero n de nodos o procesos y cada uno de estos nodos contiene un valor de entrada 
un imput .compitiendo para determinar cual es el valor correcto decidido por unamnimidad de los nodos participantes , 
se decide en comun un ganador previamente propuesto por un nodo participante y valido 

bitcoin es un sisterma con una red de pares iguales peer to peer.


alicia firma validada una transascion de pago a bob (a la clave publica de bob) msa el hash de las dos oeraciones qeu comoonen la transacion 
y la envia broadcasting a la red para validarla e incorporarla a la cadena de bloques en el siguiente 
turno o bitcoin generado o bloque en la cadena .

notamos que la pc de bob receptor no tiene porque ser un nodo .

como se establece el consenso ,las tansaciones se envian en secuencia -
en un momento determinado 
todos lso nodos contendran una secuencia de bloques de transaciones.
cada nodo tiene un conjunto de salidas de transaciones que estan siendo notificadas.
sucede en tiempo para sicronizar las transaciones .

tx tx 

tx tx
...
tx tx

‎usted está a cargo del backend para una empresa como Google o Facebook, estas compañías suelen tener miles o‎

‎incluso millones de servidores que forman un‎
05:47
‎base de datos distribuida masiva que‎
05:49
‎registra todas las acciones que ocurren‎
05:51
‎en el sistema, como comentarios de los usuarios y‎
05:53
‎me gusta y publicaciones y así sucesivamente cuando un nuevo‎
05:56
‎comentario digamos que viene en la forma en que lo hará‎
05:59
‎se registra es que podría haber diez‎
06:01
‎o quince nodos diferentes en eso‎
06:03
‎back-end masivo que podría contener‎
06:05
‎copias de esta acción ahora lo que el‎
06:07
‎el servidor debe asegurarse de que‎
06:10
‎el comentario se registra en todos‎
06:11
‎copias de esa base de datos o ninguna de ellas‎
06:13
‎si por alguna razón porque algunos de estos‎
06:16
‎los nodos pueden estar defectuosos en la acción‎
06:18
‎registrado en ninguna de las bases de datos que está‎
06:20
‎ok, puede volver al usuario y decir‎
06:22
‎ha habido un problema al guardar tu publicación‎
06:23
‎¿podría intentarlo de nuevo en el otro?‎
06:25
‎mano si algunas de las copias de la‎
06:27
‎la base de datos lo guardó y otros no lo hicieron entonces‎
06:30
‎estarías en muchos problemas porque‎
06:31
‎tendría una base de datos inconsistente, por lo que‎
06:33
‎este es el problema clave que motivó‎
06:34
‎la investigación tradicional sobre la distribución‎
06:37
‎consenso y se puede ver el‎
06:39
‎similitudes con Bitcoin aquí, pero estamos‎
06:41
‎vamos a hablar con un poco más de detalle sobre‎
06:42
‎las similitudes y diferencias para que‎
06:45
‎fue la motivación tradicional‎
06:47
‎aplicación pero también podemos imaginar que‎
06:49
‎si logramos un consenso distribuido‎
06:52
‎protocolo y pudimos usar eso para‎
06:55
‎construir un masivo‎
06:56
‎almacén de clave-valor distribuido a gran escala‎
06:58
‎que asigna claves o nombres arbitrarios a‎
07:01
‎valores arbitrarios entonces que habilitarán un‎
07:03
‎muchas aplicaciones, por ejemplo, un‎
07:05
‎sistema de nombres de dominio distribuido que es‎
07:07
‎simplemente un mapeo entre humanos‎
07:09
‎nombres de dominio comprensibles para IP‎
07:11
‎direcciones o un directorio de clave pública‎
07:13
‎que es una asignación entre el correo electrónico del usuario‎
07:16
‎direcciones digamos a sus claves públicas‎
07:18
‎o incluso cosas como operaciones bursátiles porque‎
07:21
‎esta base de datos distribuida en lugar de‎
07:23
‎realizar un seguimiento de quién ha pagado a quién y cómo‎
07:25
‎mucho dinero haría un seguimiento de quién es‎
07:27
‎transfirió qué unidades de qué stock a‎
07:30
‎quién y lo bueno de esto es‎
07:32
‎que ahora que Bitcoin ha resuelto el‎
07:35
‎problema de consenso distribuido en un‎
07:37
‎cierto sentido de que intentaremos‎
07:38
‎entender en esta conferencia que también podemos‎
07:40
‎sigue adelante y trata de pensar en‎
07:42
‎soluciones a todos estos otros relacionados‎
07:44
‎problemas y de hecho hay muchos‎
07:46
‎altcoins en altcoins tendremos varios‎
07:49
‎más conferencias sobre altcoins pero muy‎
07:51
‎brevemente altcoins‎
07:52
‎son sistemas construidos en Bitcoin como‎
07:55
‎principios a alcanzar quizás ligeramente‎
07:56
‎diferentes objetivos a veces moneda‎
07:58
‎sistemas a veces no sistemas monetarios‎
08:00
‎como una de estas aplicaciones y así‎
08:02
‎dado que podemos resolver distribuidos‎
08:05
‎consenso ahora y dado que podemos‎
08:07
‎crear una clave-valor distribuida global‎
08:08
‎almacenar permite una gran cantidad de estos otros‎
08:10
‎aplicaciones geniales bien vamos a un‎
08:14
‎definición técnica ahora la técnica‎
08:16
‎la definición de consenso distribuido es‎
08:18
‎realmente bastante simple imagina que hay‎
08:20
‎es un número fijo n de nodos o‎
08:22
‎y cada uno de estos nodos tiene‎
08:25
‎algún valor de entrada y, a continuación, un consenso‎
08:29
‎el protocolo sucede y los dos‎
08:31
‎requisitos sobre este protocolo de consenso‎
08:33
‎es que el protocolo debe terminar‎
08:35
‎y todos los nodos correctos deben decidir sobre‎
08:37
‎algunos valoran el valor de consenso correcto‎
08:40
‎y digo nodos correctos porque algunos de‎
08:41
‎los nodos pueden estar defectuosos o incluso‎
08:43
‎totalmente malicioso y el segundo‎
08:45
‎requisito es que este valor que ellos‎
08:47
‎acordar no puede ser un valor arbitrario‎
08:49
‎pero debería ser un valor que fuera‎
08:52
‎propuesto como insumo por al menos uno de‎
08:54
‎estos nodos correctos, por lo que es realmente que‎
08:57
‎sencillo‎
08:57
‎pero tratemos de ver qué podría hacer esto‎
08:59
‎significa en el contexto de Bitcoin para‎
09:02
‎comprender cómo se distribuye el consenso‎
09:04
‎podría funcionar en Bitcoin comencemos con un‎
09:07
‎recordatorio de que Bitcoin es un peer-to-peer‎
09:09
‎sistema‎
09:09
‎Correcto, así que a qué me refiero cuando digo que‎
09:11
‎bitcoin es un sistema peer-to-peer es que‎


09:14
‎cuando Alice quiere pagarle a Bob‎
09:16
‎lo que hace es que va a‎
09:18
‎difundir una transacción a todos los‎
09:20
‎Nodos de Bitcoin que comprenden el‎
09:22
‎red peer-to-peer y puede ver‎
09:24
‎aquí la estructura de la transacción‎
09:25
‎esto es similar a la moneda tonta que nosotros‎
09:28
‎vio en la primera conferencia y qué‎
09:30
‎la transacción va a tener es‎
09:32
‎va a tener la firma de Alice que‎
09:34
‎los otros nodos necesitan para saber‎
09:36
‎que realmente vino de Alicia‎
09:38
‎va a tener la clave pública de Bob‎
09:40
‎que también actúa como su dirección en la que‎
09:43
‎quiere recibir bitcoins‎
09:45
‎y además contiene un hash lo que es‎
09:48
‎este hash recuerda esta noción de hash‎
09:51
‎punteros que vimos en el primero‎
09:52
‎Conferencia para que este hash sea un camino para Alice‎
09:55
‎para vincular esta transacción o‎
09:58
‎esta moneda a su recibo de esta moneda‎
10:01
‎de otra persona anteriormente derecho así que‎
10:04
‎esas son las cosas que están contenidas‎
10:06
‎en esta estructura de datos que llamamos‎
10:07
‎transacción y ella va a transmitir‎
10:09
‎eso a todos los Bitcoin peer-to-peer‎
10:11
‎nodos y notar algo gracioso aquí‎
10:14
‎La computadora de Bob no está en ninguna parte de esto.‎
10:16
‎imagínate ahora Bob si quiere ser‎
10:19
‎notificó que esta transacción se realizó en‎
10:21
‎hecho que sucedió y que le pagaron que‎
10:23
‎es posible que desee ejecutar un nodo de Bitcoin que sea‎
10:24
‎uno de estos nodos punto a punto en orden‎
10:27
‎para escuchar en la red y asegurarse‎
10:29
‎que ha recibido esa transacción pero‎
10:31
‎de hecho, su escucha no es necesaria‎
10:32
‎para que reciba los fondos el‎
10:35
‎bitcoins será suyo si es o no‎
10:37
‎ejecutar un nodo en la red así dado‎
10:39
‎este sistema peer-to-peer ¿qué es?‎
10:41
‎exactamente que los nodos podrían querer‎
10:43
‎llegar a un consenso sobre el bien dado que un‎
10:46
‎variedad de usuarios están transmitiendo estos‎
10:48
‎transacciones a la red qué‎
10:50
‎todo el mundo quiere llegar a un consenso sobre su‎
10:51
‎exactamente qué transacciones fueron‎
10:53
‎emitidos y el orden en que estos‎
10:56
‎las transacciones ocurrieron correctamente, así que ¿qué hace‎
10:59
‎que significan específicamente cómo el consenso‎
11:02
‎podría funcionar en Bitcoin es que en cualquier‎
11:04
‎dado el tiempo todos los nodos en el‎
11:06
‎la red punto a punto tendría un‎
11:08
‎secuencia de bloques de transacciones que‎
11:10
‎han llegado a un consenso sobre el retiro‎
11:13
‎que en Scrooge moneda para la optimización‎
11:15
‎propósitos para la eficiencia que ponemos‎
11:17
‎transacciones en bloques y enlazamos‎
11:19
‎estos bloques juntos en una cadena de bloques‎
11:21
‎así que estamos utilizando un principio similar‎
11:23
‎aquí podríamos hacer consenso sobre‎
11:25
‎transacciones una por una que serían‎
11:26
‎de acuerdo, sería un eficiente, así que‎
11:29
‎en su lugar, hacemos consenso sobre un bloque por‎
11:31
‎base de bloques, por lo que en cualquier punto dado todos‎
11:34
‎estos nodos de la red punto a punto‎
11:36
‎tendría la secuencia de bloques que‎
11:37
‎ya se han puesto de acuerdo y cada uno‎
11:40
‎nodo tendría entonces un conjunto de‎
11:42
‎transacción pendiente‎


‎transacciones pendientes que tiene‎
‎oído hablar de así recordar que para estos‎
‎el consenso de las transacciones aún no ha sido‎
‎sucedió y así casi por definición‎
‎cada nodo puede tener un‎
‎la versión diferente de las transacciones pendientes que se escucha sobre la red punto a punto no es perfecta, por lo que‎

‎es posible que algún nodo haya oído hablar de una transacción, pero no otros nodos, dado que tenemos la configuración, lo que podría‎
‎lo que sucede es que tienes la secuencia de bloques que todo el mundo ha acordado un‎

‎bloque es sólo una serie de transacciones‎
12:11
‎y ahora hay estos digamos estos‎
12:14
‎tres nodos en el sistema, cada uno de los cuales‎
12:16
‎propone que cada uno de los cuales tiene una entrada el‎
12:18
‎conjunto de transacciones pendientes que‎
12:20
‎se oye hablar de él y ejecutan‎
12:22
‎juntos algún protocolo de consenso y para‎
12:26
‎el protocolo de consenso para que le suceda‎
12:28
‎puede seleccionar cualquier bloque válido incluso si es‎
12:31
‎un bloque que fue propuesto por un solo‎
12:32
‎y para que un bloque sea válido todo‎
12:35
‎estas transacciones tienen que tener el‎
12:36
‎firmas criptográficas correctas, etc., para que usted‎
12:40
‎podría seleccionar cualquiera de estos bloques válidos‎
12:42
‎y el protocolo de consenso seguiría siendo‎
12:45
‎estar bien si algunas transacciones de alguna manera‎
12:47
‎no llegó a este particular‎
12:48
‎bloque que se elige como resultado de‎
12:50
‎un protocolo de consenso que podría esperar‎
12:52
‎y entrar en el siguiente bloque, así que tal vez‎
12:54
‎este bloque verde se selecciona ahora que‎
12:57
‎se agrega a la cadena de bloques de consenso‎
12:59
‎y luego el protocolo procede y‎
13:00
‎rutas así que si tomaste las tradicionales‎
13:03
‎teoría del consenso distribuido y‎
13:05
‎aplicado que a Bitcoin este es el tipo‎
13:07
‎del sistema con el que podría terminar ahora‎
13:10
‎esto tiene algunas similitudes con cómo‎
13:12
‎Bitcoin funciona, pero no es exactamente cómo‎
13:14
‎Bitcoin funciona y por qué es eso y el‎
13:16
‎la razón de esto es simple hacer cosas‎
13:18
‎de esta manera es una técnica realmente difícil‎
13:20
‎problema por una variedad de razones allí‎
13:22
‎son algunos obvios, los nodos podrían bloquearse‎
13:25
‎y los nodos pueden ser totalmente maliciosos‎
13:27
‎pero también porque la red es altamente‎
13:30
‎imperfecto es un sistema peer-to-peer no‎
13:32
‎todos los pares de nodos están conectados a cada uno‎
13:34
‎otro‎
13:35
‎podría haber errores en la red‎
13:36
‎debido a la mala conectividad a internet‎
13:38
‎y así sucesivamente y finalmente va a‎
13:41
‎tener mucha latencia en el sistema‎
13:43
‎porque todas estas cosas suceden‎
13:45
‎internet ni siquiera están dentro de un‎
13:46
‎un solo centro de datos o algo así como‎
13:48
‎eso y una consecuencia particular de‎
13:52
‎esta latencia alta es que no hay‎
13:54
‎noción de tiempo global ¿qué hace esto?‎
13:56
‎significa y por qué es esto importante que significa‎
13:58
‎que no todos los nodos pueden estar de acuerdo con un‎
14:02
‎ordenación de eventos simplemente basada en‎
14:04
‎observar marcas de tiempo simplemente no lo hace‎
14:06
‎trabajar así, así que no es posible‎
14:08
‎diseña tu protocolo diciendo cosas‎
14:10
‎como tomar el nodo que envió el primero‎
14:13
‎en el paso uno y tener ese nodo‎
14:15
‎haz algo en el paso dos que simplemente no puedes‎
14:17
‎trabajo así‎
14:17
‎porque no todos los nodos estarán de acuerdo‎
14:20
‎qué mensaje se envió primero en el cuadro de diálogo‎
14:22
‎primer paso del protocolo por lo que este‎
14:24
‎realmente pone serias limitaciones a lo que‎
14:27
‎tipos de algoritmos que realmente puedes poner‎
14:29
‎en sus protocolos de consenso y en‎
14:31
‎hecho debido a estas limitaciones mucho‎
14:34
‎de la literatura distribuida‎
14:35
‎el consenso es algo pesimista y‎
14:37
‎muchos resultados de imposibilidad han sido‎
14:39
‎probado que solo voy a nombrar un par‎
14:41
‎de estos en caso de que quieras mirarlos‎
14:43
‎arriba pero no voy a entrar en demasiados detalles‎
14:45
‎un resultado de imposibilidad que es muy‎
14:47
‎bien conocido y bastante simple de‎
14:48
‎entender se llama el bizantino‎
14:50
‎problema general y mucho más sutil‎
14:52
‎uno conocido por los nombres de los autores‎
14:55
‎quien lo demostró por primera vez se llama el Pescador‎
14:57
‎Lynch Patterson y los posibles resultados‎
14:59
‎bajo algunas condiciones que incluyen el‎
15:02
‎nodos que actúan de manera determinista‎
15:03
‎lo que demostraron es que el consenso es‎
15:05
‎imposible incluso con un solo defecto‎
15:08
‎proceso así a pesar de estas imposibilidades‎
15:10
‎resultados hay algunos bien conocidos‎
15:12
‎protocolos y Paxos es probablemente uno de‎
15:15
‎el más conocido y lo que hace Paxos es‎
15:17
‎hace ciertos compromisos lo que hace‎
15:20
‎lo que te da es que nunca produce un‎
15:22
‎resultado inconsistente que sería‎
15:23
‎realmente malo pero acepta la compensación‎
15:26
‎que bajo ciertas condiciones aunque‎
15:28
‎raros el protocolo puede atascarse y‎
15:30
‎no pudo hacer ningún progreso, pero aquí está‎
15:33
‎lo interesante‎
15:34
‎estos resultados de imposibilidad fueron usted‎
15:37
‎saber que fueron probados en un‎
15:38
‎modelo que estaban destinados a estudiar‎
15:40
‎bases de datos distribuidas y este modelo‎
15:41
‎no se traslada tan bien - esto es un‎
15:45
‎establecer que Bitcoin opera bajo así‎
15:47
‎lo que estos resultados realmente nos dicen más‎
15:49
‎sobre ellos‎
15:49
‎modelar entonces sobre el problema de hecho y‎
15:53
‎lo que hace bitcoin es que viola un‎
15:56
‎muchas de las suposiciones que entran en‎
15:58
‎estos modelos y por eso‎
15:59
‎El consenso en Bitcoin irónicamente funciona‎
16:02
‎mejor en la práctica que en la teoría y‎
16:04
‎lo que esto realmente significa es que el‎
16:06
‎teoría que fue desarrollada para un‎
16:08
‎diferente conjunto de problemas necesita atrapar‎
16:10
‎arriba para poder decir realmente‎
16:12
‎cosas interesantes sobre Bitcoin pero‎
16:14
‎sin embargo, esa teoría es bastante‎
16:15
‎importante porque por ejemplo puede‎
16:18
‎ayúdanos a predecir ataques imprevistos y‎
16:20
‎realmente ser capaz de llegar a ser fuerte‎
16:23
‎garantías sobre la naturaleza del consenso‎
16:25
‎y la seguridad en Bitcoin, así que ¿qué son‎
16:29
‎estos diferentes supuestos lo que son‎
16:30
‎algunas cosas que hace Bitcoin‎
16:31
‎diferentemente bien en primer lugar que todo‎
16:33
‎introduce la idea de incentivos y‎
16:35
‎esto es muy diferente de cualquier anterior‎
16:38
‎sistema para el consenso distribuido y‎
16:40
‎esto solo es posible en Bitcoin porque‎
16:42
‎es una moneda y puedes usar eso‎
16:44
‎moneda para dar incentivos a la‎
16:46
‎participantes por actuar honestamente y así‎
16:50
‎Bitcoin no resuelve del todo el‎
16:51
‎problema de consenso distribuido en un‎
16:53
‎sentido general pero lo resuelve en el‎
16:55
‎contexto del sistema monetario el otro‎
16:57
‎lo que hace diferente es que‎
16:59
‎realmente abraza la noción de‎
17:00
‎aleatoriedad y lo que quiero decir con eso es‎
17:02
‎una de las cosas que hace es que hace‎
17:04
‎lejos con la noción de un‎
17:06
‎punto de partida y punto final para‎
17:07
‎el consenso, en cambio, el consenso ocurre sobre‎
17:11
‎un largo período de tiempo de aproximadamente una hora en‎
17:13
‎el sistema práctico y pero incluso en el‎
17:15
‎al final de ese tiempo no eres cien‎
17:16
‎porcentaje seguro de que una transacción o un‎
17:19
‎bloque que te interesa ha hecho‎
17:20
‎en su lugar, en la cadena de bloques de consenso‎
17:23
‎a medida que pasa el tiempo, su probabilidad aumenta‎
17:26
‎cada vez más alto y la probabilidad‎
17:28
‎que te equivocas al hacer un‎
17:29
‎la suposición sobre una transacción disminuye‎
17:32
‎exponencialmente así que ese es el tipo de‎
17:35
‎garantía inherentemente probabilística de que‎
17:37
‎Bitcoin te da y por eso es‎
17:39
‎capaz de sortear completamente estos‎
17:41
‎tradicionalmente en tradicional‎
17:43
‎resultados de imposibilidad en distribuido‎
17:44
‎protocolos de consenso‎
17:46
‎tú‎
17:50
‎así que profundicemos ahora en lo técnico‎
17:52
‎detalles del algoritmo de consenso de bitcoins‎
17:54
‎y mientras miramos eso,‎
17:57
‎Debe tener en cuenta que Bitcoin lo hace‎
17:58
‎todo esto sin que los nodos tengan ninguna‎
18:01
‎identidades persistentes a largo plazo y esto‎
18:03
‎es una vez más una diferencia de cómo‎
18:05
‎consenso de distribución tradicional‎
18:07
‎algoritmos operados y si las notas lo hicieron‎
18:09
‎tener identidades haría que las cosas fueran un‎
18:11
‎mucho más fácil por un par de razones uno‎
18:13
‎es una razón pragmática que te permitiría‎
18:15
‎para poner en su protocolo cosas como‎
18:17
‎ahora el nodo con el número más bajo‎
18:20
‎ID debe dar algún paso o algo así‎
18:22
‎así que eso es un simple pragmático‎
18:24
‎razón que ya si los noes son‎
18:26
‎completamente anónimo se vuelve más difícil de‎
18:27
‎no hace más que una razón mucho más seria para‎
18:31
‎nodos para tener identidades en cuanto a seguridad‎
18:33
‎porque si se identificaron nodos y‎
18:35
‎no eran triviales para crear nuevos nodos‎
18:37
‎identidades de nodo ident entonces podríamos hacer‎
18:40
‎suposiciones como digamos que menos‎
18:42
‎que el 50% de los nodos son maliciosos y‎
18:44
‎podríamos derivar propiedades de seguridad‎
18:45
‎de ello, por ambas razones, el‎
18:49
‎El protocolo de consenso en Bitcoin es un poco‎
18:51
‎más difícil, pero ¿por qué es exactamente el Bitcoin?‎
18:54
‎los nodos no tienen identidades bien, es‎
18:56
‎por un par de razones‎
18:57
‎una es que si estás en un descentralizado‎
18:59
‎modelo en un sistema peer-to-peer hay‎
19:01
‎no hay autoridad central para dar identidades‎
19:05
‎a los nodos y compruebe que no lo son‎
19:06
‎crear nuevos nodos a voluntad y de hecho‎
19:10
‎el término técnico para esto es un Sybil‎
19:11
‎atacar‎
19:12
‎Las Sybil son solo copias de nodos que un‎
19:14
‎adversario malintencionado puede crear para mirar‎
19:16
‎como que hay un montón de diferentes‎
19:18
‎participantes cuando en realidad todos aquellos‎
19:19
‎pseudo participantes son realmente‎
19:21
‎controlado por el mismo adversario el‎
19:24
‎otra razón es que el seudónimo‎
19:26
‎es inherentemente un objetivo de Bitcoin, incluso si‎
19:28
‎era posible o fácil de establecer‎
19:30
‎identidades para todos los nodos o todos‎
19:32
‎participantes no necesariamente lo haríamos‎
19:34
‎quiero hacer eso para que bitcoin no dé‎
19:37
‎su fuerte anonimato garantiza fuera de‎
19:39
‎la caja y eso es lo diferente‎
19:41
‎las transacciones que realice probablemente puedan‎
19:43
‎estar unidos entre sí pero al mismo tiempo‎
19:45
‎nadie te está obligando a poner tu verdadero‎
19:48
‎identidad de vida como su nombre o IP‎
19:51
‎dirección o algo así‎
19:52
‎con el fin de participar en el‎
19:54
‎red peer-to-peer y en el‎
19:55
‎blockchain y eso es importante‎
19:56
‎así que lo que podemos hacer en su lugar es nosotros‎
20:02
‎puede hacer una suposición más débil‎
20:04
‎y quiero que des un salto de‎
20:06
‎fe conmigo aquí que este más débil‎
20:08
‎la suposición es algo que va‎
20:11
‎para ser factible y voy a hacer‎
20:12
‎esta suposición aquí y más adelante le muestran‎
20:14
‎cómo se logra esto realmente y‎
20:16
‎lo que es esta suposición más débil es que‎
20:18
‎vamos a suponer que hay algunos‎
20:20
‎capacidad de alguna manera para elegir un nodo aleatorio en‎
20:22
‎el sistema y una buena analogía motivadora‎
20:25
‎para esto es una lotería o una rifa o‎
20:28
‎cualquier número de sistemas de la vida real‎
20:30
‎estamos rastreando y verificando personas y‎
20:32
‎dándoles identidades y verificando‎
20:34

‎esas identidades son bastante difíciles y por lo tanto‎
20:36
‎lo que hacemos en esos contextos es que podríamos‎
20:37
‎darles tokens o boletos o algo así‎
20:40
‎de ese tipo y que luego nos permite‎
20:42
‎Más tarde, elija un ID de token aleatorio y llame‎
20:44
‎sobre esa persona, así que vamos a hacer‎
20:47
‎algo similar con respecto a estos‎
20:48
‎Bitcoin notas y asumir aún más para el‎
20:51
‎momento que esta generación de tokens y‎
20:53
‎el algoritmo de distribución tiene suficiente inteligencia‎
20:55
‎para que si el adversario lo va a intentar‎
20:58
‎para crear muchos nodos Sybil juntos‎
21:00
‎todos esos símbolos solo obtienen un token‎
21:02
‎por lo que el adversario no es capaz de multiplicarse‎
21:04
‎su poder de esa manera, así que hagamos esto‎
21:07
‎suposición por ahora y veamos qué‎
21:09
‎se hace posible si hacemos esto‎
21:11
‎suposición aquí está la idea clave de lo que‎
21:14
‎se hace posible bajo este supuesto‎
21:16
‎de selección aleatoria de nodos es algo‎
21:19
‎llamado consenso implícito por lo que es‎
21:22
‎consenso implícito en cada ronda y‎
21:24
‎va a haber varias rondas‎
21:26
‎cada ejecución corresponde a una‎
21:27
‎Bloque en la cadena de bloques en cada ronda a‎
21:30
‎el nodo aleatorio está seleccionado de alguna manera‎
21:31
‎mágicamente por el momento y este nodo‎
21:34
‎llega a proponer el siguiente bloque en el‎
21:35
‎cadena no hay algoritmo de consenso‎
21:37
‎no hay votación este nodo simplemente‎
21:39
‎propone unilateralmente lo que el próximo‎
21:41
‎bloque y la cadena de bloques va a ser‎
21:43
‎pero ¿qué pasa si ese nodo es malicioso bien?‎
21:46
‎hay un proceso para esto, pero es un‎
21:49
‎implícito uno otro nodo implícitamente‎
21:51
‎aceptar o rechazar ese bloqueo y cómo‎
21:54
‎lo hacen si aceptan ese bloque‎
21:56
‎señalarán que la aceptación‎
21:58
‎extendiendo el inicio de la cadena de bloques‎
22:01
‎de ese bloque o si lo rechazan‎
22:03
‎bloquearán extenderán la cadena por‎
22:05
‎ignorar ese bloque y comenzar desde‎
22:07
‎cualquiera que fuera el último bloque anterior‎
22:10
‎en la cadena de bloques y técnicamente cómo es‎
22:13
‎que implementado recuerda que cada bloque‎
22:15
‎contiene un hash del bloque que‎
22:18
‎y este es el mecanismo técnico que‎
22:21
‎permite necesidades para indicar qué bloque es‎
22:23
‎que se están extendiendo así dado esto‎
22:27
‎esto es lo que el consenso general‎
22:29
‎Algoritmo en Bitcoin va a mirar‎
22:31
‎como ahora, esto está un poco simplificado‎
22:33
‎y la razón por la que se simplifica es de nuevo‎
22:35
‎que estoy asumiendo una especie de magia‎
22:37
‎proceso de selección de nodos aleatorios, pero excepto‎
22:40
‎para esa simplificación esto es bonito‎
22:42
‎cerca de cómo funciona realmente Bitcoin‎
22:44
‎así que cada vez que Alice quiere pagarle a Bob ella‎
22:47
‎creará una transacción y ella‎
22:49
‎difundirlo a todos los nodos y a cualquier‎
22:52
‎uno de estos nodos está constantemente‎
22:53
‎escuchar la red y recopilar‎
22:55
‎una lista de transacciones pendientes que‎
22:57
‎aún no han llegado a la cadena de bloques‎
22:59
‎en algún momento uno de estos nodos es‎
23:02
‎va a ser llamado al azar a‎
23:03
‎proponer el siguiente bloque al que va a‎
23:05
‎redondea todos los destacados‎
23:07
‎transacciones de las que se ha oído hablar y‎
23:08
‎proponer que bloque ahora presumiblemente que‎
23:12
‎node fue honesto, pero también podría ser un‎
23:14
‎nodo malicioso o un nodo defectuoso y‎
23:16
‎proponer un bloque que contenga algunos‎
23:18
‎transacciones no válidas no válidas‎
23:20
‎las transacciones son aquellas que no tienen‎
23:23
‎la firma criptográfica correcta o donde el‎
23:26
‎la transacción ya se ha gastado en otros‎
23:27
‎palabras un intento de doble gasto por lo que si‎
23:30
‎que sucede otros nodos van a‎
23:33
‎señalar su aceptación o rechazo de‎
23:35
‎el bloque como vimos en la última diapositiva por‎
23:37
‎ya sea incluyendo el hash de este último‎
23:39
‎bloquear en su siguiente bloque o ignorar‎
23:42
‎este bloque e incluyendo el hash de‎
23:44
‎cualquiera que fuera el bloque anterior que‎
23:46
‎consideran que es válido todo bien‎
23:49
‎así que ahora tratemos de entender por qué esto‎
23:51
‎El algoritmo de consenso funciona y la forma en que‎
23:53
‎me gusta entender que esto es en lugar de‎
23:55
‎preguntando por qué funciona esto, tratemos de preguntar‎
23:57
‎¿cómo puede un adversario malintencionado intentar‎
24:00
‎subvertir este proceso, así que veamos‎
24:03
‎que por un segundo así que aquí tenemos un‎
24:05
‎par de bloques en la cadena de bloques‎
24:07
‎supongamos que esto se extiende a la izquierda a‎
24:09
‎largo camino de regreso hasta lo que es‎
24:11
‎llamado el bloque Génesis pero aquí estoy‎
24:13
‎solo te muestra un par de bloques en‎
24:15
‎la cadena de bloques y ese puntero que tú‎
24:16
‎ver por encima hay un bloque que hace referencia a‎
24:20
‎¿cuál es el bloque anterior que es?‎
24:21
‎se extiende incluyendo un hash de que‎
24:24
‎bloque anterior dentro de su propio contenido‎
24:26
‎así que vamos a atacar a Tamil Isha‎
24:29
‎llámala Alicia qué podría intentar hacer‎
24:32
‎¿puede simplemente robar bitcoins que pertenecen?‎
24:35
‎a otro usuario en una dirección diferente‎
24:36
‎que ella no controla ahora, incluso si es‎
24:40
‎es ahora el turno de Alicia de proponer el próximo‎
24:43
‎bloque en esta cadena que no puede robar‎
24:45
‎otros usuarios bitcoins por qué porque ella‎
24:48
‎no pueden falsificar sus firmas por lo tanto tiempo‎
24:50
‎como la criptografía subyacente es sólida, ella es‎
24:52
‎no puede simplemente robar bitcoins‎
24:54
‎otra cosa que podría tratar de hacer es si‎
24:57
‎ella realmente odia a algún otro usuario‎
24:59
‎Bob entonces ella puede mirar la dirección de Bob‎
25:01
‎y ella puede decidir que cualquier transacción‎
25:04
‎originando la dirección de Bob ella‎
25:06
‎simplemente no incluirlos en ningún bloque‎
25:08
‎que ella propone subir al‎
25:10
‎blockchain en otras palabras, ella está negando‎
25:13
‎servicio a Bob por lo que este es un ataque válido‎
25:15
‎que puede intentar montar pero por suerte‎
25:18
‎no es más que un poco‎
25:19
‎molestia porque si el bloqueo de Bob no‎
25:22
‎conviértelo en el siguiente bloque que alicia‎
25:23
‎propone que solo esperará otra cuadra‎
25:26
‎hasta que un nodo honesto tenga la oportunidad de‎
25:28
‎proponer un bloque y luego su transacción‎
25:30
‎entrará en ese bloque, así que eso no es‎
25:32
‎realmente un buen ataque tampoco, así que el único‎
25:34
‎uno que realmente se quedó con qué‎
25:36
‎un nodo malintencionado puede intentar hacer aquí es‎
25:38
‎llamado un ataque de doble gasto, así que cómo‎
25:41
‎¿podría un ataque de doble gasto funcionar para‎
25:43
‎entender que supongamos que alicia‎
25:45
‎es cliente de algún comerciante en línea o‎
25:49
‎un sitio web dirigido por bob que proporciona algunos‎
25:52
‎servicio en línea a cambio de pago‎
25:54
‎en bitcoins digamos que nos permite‎
25:56
‎descargar de algún software, así que así es como‎
25:58
‎un ataque de doble gasto podría funcionar‎
26:00
‎Alice va al sitio web de Bob y decide‎
26:04
‎para comprar este artículo lo paga con‎
26:06
‎bitcoins y lo que eso significa en‎
26:08
‎términos técnicos es que ella va a‎
26:10
‎crear una transacción de Bitcoin a partir de ella‎
26:13
‎dirección - La dirección de Bob que ella transmite‎
26:16
‎a la red y digamos que‎
26:18
‎algún nodo honesto crea el siguiente bloque‎
26:21
‎escucha esta transacción e incluye‎
26:24
‎está en ese bloque, así que lo que está pasando‎
26:27
‎aquí está este bloque que fue‎
26:29
‎creado por un nodo honesto que contiene‎
26:31
‎una transacción que representa un pago‎
26:34
‎de Alicia al comerciante Bob por C‎
26:36
‎subíndice a Me refiero a una moneda que pertenece a‎
26:39
‎Alice y eso ahora está siendo enviado a‎
26:41
‎La dirección de Bob vamos a acercarnos a esto y a un‎
26:44
‎un poco más técnico‎
26:45
‎Cola de una transacción como vimos anteriormente como‎
26:48
‎una estructura de datos que contiene Alice's‎
26:51
‎firma aquí y una instrucción para pagar‎
26:53
‎a la clave pública de Bob y también a un hash‎
26:56
‎¿qué es este hash, este hash representa un‎
26:58
‎puntero a la transacción donde Alice‎
27:01
‎de hecho recibió esa moneda de alguien‎
27:03
‎else y eso debe ser un puntero a un‎
27:05
‎transacción que se incluyó en algunos‎
27:08
‎bloque anterior en la cadena de consenso por lo que‎
27:10
‎visualmente se va a ver algo‎
27:11
‎como este, hagamos una pausa por un segundo aquí‎
27:15
‎porque hay algo sutil en marcha‎
27:17
‎en hay al menos dos diferentes‎
27:19
‎tipos de punteros en este diagrama que‎
27:21
‎Te he demostrado que de hecho hay un tercero‎
27:23
‎uno correspondiente a los árboles de Merkel, pero‎
27:24
‎no vamos a ver eso en el‎
27:26
‎momento presente pero estos dos tipos de‎
27:29
‎los punteros a los que me refiero son bloques que‎
27:33
‎incluir un hash del bloque anterior‎
27:34
‎que están extendiendo y transacciones‎
27:37
‎que incluyen un puntero a lo que sea el‎
27:40
‎transacción anterior que donde la moneda‎
27:42
‎vino de derecha, así que esta es la situación‎
27:45
‎y este bloque fue generado ahora por un‎
27:50
‎nodo honesto y ahora supongamos que‎
27:52
‎la próxima vez que se llame a una nota aleatoria‎
27:55
‎ese nodo es un nodo malintencionado controlado‎
27:59
‎por Alice derecho así que esta es la cadena de bloques‎
28:01
‎tal como está ahora mismo, bob ya lo ha hecho‎
28:03
‎miré esta cadena de bloques decidí que‎
28:05
‎alice le ha pagado y ha permitido a Alice‎
28:08
‎para descargar el software o lo que sea‎
28:10
‎es que ella estaba comprando en su sitio web‎
28:12
‎Así que en lo que respecta a Bob, él es‎
28:15
‎satisfecho de que la transacción se haya completado‎
28:16
‎Alice ahora ha recibido sus bienes en‎
28:19
‎cambiar por el pago ahora lo que podría‎
28:21
‎Suceder es si Alicia ahora llega a proponer‎
28:24
‎el siguiente bloque podría proponer un bloque‎
28:26
‎que parece que esto ignora por completo‎
28:29
‎este bloque válido aquí y en su lugar‎
28:32
‎contiene un puntero al bloque anterior‎
28:34
‎y además va a contener un‎
28:38
‎transacción que contiene una transferencia de‎
28:41
‎monedas de las monedas de Alicia a otro‎
28:43
‎abordar un número primo que también está controlado‎
28:45
‎por Alice por lo que este es un doble clásico‎
28:49
‎patrón de gasto lo que está sucediendo aquí es‎
28:51
‎Alice ahora crea una nueva transacción que‎
28:55
‎transfiere esa moneda en lugar de a Bob's‎
28:57
‎dirección a otra dirección‎
28:59
‎por ella y visualmente se va a ver‎
29:01
‎como este, este es un lugar completamente diferente‎
29:02
‎transacción también con el puntero hash‎
29:04
‎volver a la misma transacción‎
29:06
‎referido a derecho anterior, por lo que esto es‎
29:09
‎qué intento de un doble gasto‎
29:11
‎me gusta y cómo sabemos si este doble‎
29:14
‎el intento de gasto va a tener éxito o no‎
29:16
‎bueno, eso depende de si este verde‎
29:19
‎transacción aquí o esta transacción roja‎
29:21
‎va a terminar finalmente en el‎
29:23
‎cadena de consenso a largo plazo, así que qué‎
29:26
‎determina que eso está determinado por‎
29:28
‎el hecho de que los nodos honestos son siempre‎
29:31
‎siguiendo la política de ampliación de la‎
29:33
‎rama válida más larga, así que ahora cuál de‎
29:36
‎esta es la rama válida más larga que tiene‎
29:38
‎podría mirar esto y decir AHA el primero‎
29:40
‎una es la rama válida más larga, no la‎
29:42
‎segundo porque es un doble gastado‎
29:43
‎intento, pero aquí hay un punto muy sutil‎
29:46
‎que quiero que aprecies de sort‎
29:48
‎desde un punto de vista moral esto‎
29:50
‎transacción en verde en la transacción‎
29:51
‎el rojo puede verse muy diferente porque‎
29:54
‎basado en la explicación que he dado‎
29:57
‎tú el primero es un intento de Alice‎
29:59
‎para pagarle a Bob, mientras que el segundo es un‎
30:01
‎intento de Alice de defraudar a Bob y pagar‎
30:04
‎monedas de vuelta a sí misma pero de un‎
30:06
‎punto de vista tecnológico estos dos‎
30:08
‎las transacciones son completamente idénticas‎
30:10
‎los nodos que están analizando esto‎
30:12
‎realmente no tengo forma de saber cuál es‎
30:14
‎la transacción legítima y el putting‎
30:16
‎legítimo en las citas aéreas porque es un‎
30:18
‎el juicio moral que le aplicamos es‎
30:20
‎no es una distinción técnica versus cuál‎
30:23
‎uno es el intento de duplicarlo.‎
30:24
‎podría ser fácilmente al revés‎
30:26
‎ahora los nodos a menudo siguen una heurística de‎
30:30
‎extendiendo el bloque que primero‎
30:31
‎oído hablar de la red peer-to-peer‎
30:33
‎pero no es una regla sólida y en cualquier‎
30:35
‎caso debido a la red‎
‎el siguiente nodo que llega a proponer un‎
30:45
‎el bloque extenderá este bloque en lugar de‎
30:47
‎este o podría ser que incluso si‎
30:49
‎es un nodo honesto que Alice podría intentar‎
30:51
‎sobornar ese nodo o intentar subvertir el‎
30:53
‎procesar de diversas maneras para‎
30:55
‎cualquier razón sin ir demasiado‎
30:57
‎en los detalles digamos que el siguiente‎
30:59
‎el nodo extiende el bloque con el rojo‎
31:01
‎transacción en lugar de la verde‎
31:03
‎lo que esto significa es que en este punto‎
31:06
‎el siguiente nodo honesto es mucho más probable‎
31:08
‎para extender este bloque en lugar de este‎
31:10
‎porque ahora esto se ha convertido en el largo‎
31:12
‎cadena valo así que digamos que después de uno‎
31:16
‎más bloque la situación se ve así‎
31:17
‎ahora está empezando a parecer bastante probable‎
31:19
‎que este doble giro ha tenido éxito en‎
31:21
‎de hecho lo que podría suceder es que esto termine‎
31:24
‎subir la cadena de consenso a largo plazo y‎
31:26
‎este bloque es completamente ignorado por‎
31:29
‎la red y ahora se denomina‎
31:31
‎bloque huérfano y este es un ejemplo de un‎
31:34
‎doble gasto exitoso, así que ahora vamos a‎
31:36
‎mira toda esta situación de Bob‎
31:38
‎el punto de vista de los comerciantes y‎
31:40
‎comprender cómo Bob puede proteger‎
31:42
‎él mismo de este ataque de doble gasto‎
31:43
‎realmente va a ser una parte clave de‎
31:45
‎entendiendo la seguridad de Bitcoin, así que vamos a‎
31:47
‎mira lo que pasó aquí de nuevo tenemos‎
31:50
‎un par de bloques en la cadena de bloques y‎
31:52
‎en este punto‎
31:54
‎Alice transmite una transacción que‎
31:56
‎representa su pago a Bob y así Bob‎
31:58
‎va a oír hablar de ello en el‎
32:00
‎red peer-to-peer aquí mismo, incluso‎
32:02
‎antes de que se cree el siguiente bloque y‎
32:04
‎para que Bob pueda hacer algo aún más‎
32:07
‎temerario que lo que hizo en el‎
32:09
‎luz previa que es que tan pronto como‎
32:11
‎se entera de la transacción en el‎
32:12
‎red peer-to-peer puede completar el‎
32:14
‎transacción en el sitio web y permitir‎
32:16
‎Alice para descargar lo que sea‎
32:18
‎descarga que se denomina cero‎
32:20
‎transacción de confirmación o podría‎
32:24
‎espere hasta que la transacción obtenga uno‎
32:26
‎confirmación en la cadena de bloques que‎
32:28
‎significa que al menos algún nodo tiene‎
32:32
‎ha creado un bloque y ha propuesto esto‎
32:35
‎transacción y que ha entrado en el‎
32:37
‎blockchain pero como vimos anteriormente incluso‎
32:40
‎después de una confirmación podría haber un‎
32:42
‎intentar un doble gasto, digamos‎
32:44
‎que esto realmente sucede si como en el‎
32:47
‎diapositiva anterior el intento de doble gasto‎
32:49
‎lo que Bob debería hacer es‎
32:51
‎darse cuenta de que el bloque que él pensaba‎
32:53
‎representada Alicia pagándole tiene ahora‎
32:56
‎ha quedado huérfana y ella lo es y por lo tanto él debería‎
32:57
‎en su lugar, abandone la transacción si es así‎
33:01
‎sucede que a pesar de este doble gasto‎
33:02
‎intente el siguiente bloque que se genera‎
33:05
‎resulta extender el bloque que es‎
33:08
‎interesado en ahora ve que su‎
33:11
‎la transacción tiene dos confirmaciones en el‎
33:13
‎blockchain ahora obtiene un poco más‎
33:16
‎confianza en que su transacción va a marchar‎
33:18
‎para terminar en el consenso a largo plazo‎
33:19
‎cadena así que digamos que hay una más y‎
33:22
‎ahora hay tres confirmaciones en‎
33:24
general
33:25
‎cuantas más confirmaciones tenga su transacción‎
33:27
‎obtiene cuanto mayor sea la probabilidad de que‎
33:29
‎va a terminar a largo plazo‎
33:31
‎cadena de consenso porque si recuerdas‎
33:33
‎el comportamiento honesto de los nodos que lo harán‎
33:35
‎extender siempre la rama válida más larga‎
33:38
‎que ven la posibilidad de que este‎
33:40
‎va a ponerse al día con esto por más tiempo‎
33:42
‎la rama es ahora muy minúscula, especialmente‎
33:45
‎si sólo una minoría de los nodos son‎
33:47
‎malicioso porque normalmente es el único‎
33:50
‎razón por la que este intento de doble tramo‎
33:52
‎el bloque se extendería en este punto es‎
33:54
‎si el siguiente nodo que se va a elegir aleatoriamente‎
33:56
‎era un nodo malicioso y entonces necesitaría‎
33:58
‎otro nodo malintencionado y luego otro‎
33:59
‎para que la rama más corta se convierta en‎
34:01
‎la rama más larga en general la doble‎
34:06
‎la probabilidad de span disminuye exponencialmente‎
34:09
‎con el número de confirmaciones así que si‎
34:12
‎la transacción que te interesa tiene‎
34:14
‎recibió K confirmaciones y luego el‎
34:16
‎probabilidad de que esta otra transacción‎
34:17
‎va a terminar a largo plazo‎
34:19
‎la cadena de consenso baja exponencialmente‎
34:21
‎en función de K en el más común‎
34:24
‎heurística que se utiliza en el Bitcoin‎
34:26
‎ecosistema es que esperas seis‎
34:28
‎confirmaciones no hay nada realmente‎
34:30
‎especial sobre el número seis es sólo un‎
34:32
‎buena compensación entre la cantidad de‎
34:34
‎tiempo que tienes que esperar y tu garantía‎
34:36
‎que la transacción que le interesa‎
34:38
‎en termina en el consenso observando así que‎
34:42
‎recapitulemos lo que vimos aquí protección‎
34:46
‎contra transacciones no válidas que es‎
34:48
‎protección contra un nodo malintencionado‎
34:49
‎simplemente inventando una transacción para robar‎
34:51
‎los bitcoins de alguien son completamente‎
34:53
‎criptográfico pero es aplicado por‎
34:56
‎consenso que significa que si un nodo‎
34:59
‎intenta que entonces la única razón‎
35:01
‎que esa transacción no terminará en‎
35:03
‎la cadena de consenso a largo plazo se debe a que‎
35:05
‎la mayoría de los nodos son honestos y‎
35:06
‎tratará esa transacción como no válida‎
35:08
‎por otro lado, la protección contra‎
35:11
‎el doble gasto se trata puramente de‎
35:12
‎consenso‎
35:13
‎la criptografía no tiene nada que decir‎
35:15
‎esto y las transacciones verdaderas que‎
35:17
‎representan un tipo de intento de doble gasto‎
35:20
‎de aspecto idéntico desde la perspectiva‎
35:22
‎de firmas y demás, pero es el‎
35:24
‎consenso que determina cuál‎
35:26
‎terminar en la cadena de consenso a largo plazo‎
35:28
‎y finalmente nunca estás 100% seguro de que‎
35:31
‎una transacción que te interesa está en‎
35:33
‎la rama de consenso, pero esta‎
35:35
‎la garantía de probabilidad exponencial es‎
35:37
‎bastante bueno después de unas seis transacciones‎
35:39
‎prácticamente no hay posibilidad de que eso‎
35:41
‎te vas a equivocar‎
35:48
‎así que en la sección anterior obtuvimos un‎
35:51
‎mirada básica al consenso de bitcoins‎
35:53
‎algoritmo y una buena intuición de por qué‎
35:56
‎creemos que es seguro, pero recordamos‎
35:58
‎que al inicio de la conferencia I‎
36:00
‎te dijo que la descentralización de bitcoins‎
36:02
‎es en parte un mecanismo técnico y‎
36:04
‎ingeniería de incentivos parcialmente inteligente‎
36:06
‎hasta ahora hemos mirado principalmente el‎
36:08
‎mecanismo técnico ahora hablemos de‎
36:10
‎la ingeniería de incentivos que sucede‎
36:12
‎en Bitcoin te pedí que dieras un salto de‎
36:16
‎fe conmigo antes en asumir que‎
36:18
‎podemos elegir un nodo aleatorio y‎
36:20
‎quizás más problemáticamente que en‎
36:23
‎al menos el 50% de las veces este proceso lo hará‎
36:25
‎elija un nodo honesto, pero por supuesto esto‎
36:27
‎la asunción de la honestidad es bastante‎
36:28
‎problemático especialmente si hay‎
36:30
‎incentivos financieros para que los participantes‎
36:32
‎subvertir esto, entonces, ¿por qué esperaríamos‎
36:34
‎cualquier nodo para ser honestos realmente así que lo que nosotros‎
36:36
‎quiero preguntar es si podemos dar a los nodos un‎
36:39
‎incentivo para comportarse honestamente, hagamos‎
36:41
‎mira esto con respecto a la imagen‎
36:43
‎hemos estado viendo que este es el‎
36:45
‎cadena de consenso a largo plazo y este bloque‎
36:47
‎contiene un intento de duplicar el gasto que tenemos‎
36:50
‎¿podemos preguntar podemos penalizar de alguna manera el nodo?‎
36:52
‎que creó este bloque pero esto es‎
36:55
‎problemático por varias razones‎
36:56
‎incluyendo el hecho de que los nodos no tienen‎
36:58
‎identidades y por lo tanto no hay forma de ir‎
37:00
‎después de ellos para penalizarlos, así que en su lugar‎
37:02
‎demos la vuelta a la pregunta y preguntemos‎
37:04
‎¿podemos recompensar a los nodos que crearon todo?‎
37:07
‎estos bloques que terminaron en el largo‎
37:09
‎cadena de consenso de términos bien de nuevo algo así como‎
37:12
‎el mismo problema que no tenemos no‎
37:13
‎identidades para que no podamos enviarles dinero en efectivo‎
37:16
‎sus domicilios si tan solo hubiera‎
37:18
‎algún tipo de moneda digital que nosotros‎
37:20
‎puede utilizar para incentivarlos un‎
37:21
‎descentralizado tal vez usted probablemente‎
37:24
‎ver a dónde estoy llegando, en otras palabras.‎
37:26
‎vamos a usar bitcoins para‎
37:29
‎incentivar los nodos que los crearon‎
37:32
‎bloques entonces, ¿cómo vamos a hacer eso?‎
37:33
‎bueno hasta ahora todo lo que he dicho es‎
37:36
‎solo un algoritmo abstracto para lograr‎
37:39
‎consenso distribuido ahora vamos a‎
37:41
‎salir de ese modelo lo que voy‎
37:42
‎decir ahora es específico del hecho de que‎
37:44
‎lo que estamos logrando a través de esto‎
37:46
‎el proceso de consenso distribuido es, de hecho,‎
37:48
‎una moneda y vamos a‎
37:49
‎incentivar estos nodos pagándoles‎
37:52
‎en unidades de esta moneda, así que ¿cómo lo hacemos?‎
37:56
‎hacer que de hecho hay dos separados‎
37:58
‎mecanismos de incentivos en Bitcoin y el‎
38:00
‎la primera es‎
38:01
‎llamado la sala de bloqueo, así que ¿cuál es el‎
38:03
‎bloquear recompensa es solo esto de acuerdo con‎
38:06
‎las reglas de Bitcoin el nodo que‎
38:08
‎crea cada bloque, llega a incluir un‎
38:11
‎transacción especial en ese bloque y‎
38:12
‎esa transacción especial es una moneda‎
38:15
‎transacción de creación y este nodo puede‎
38:18
‎elija también la dirección del destinatario de‎
38:20
‎esta transacción, por supuesto, ese nodo‎
38:22
‎normalmente elegirá una dirección‎
38:24
‎perteneciendo a sí mismo como receptor de‎
38:26
‎esta transacción de creación de monedas por lo tanto‎
38:28
‎pagarse a sí mismo es algo que puedes pensar‎
38:30
‎de ella como pago a cambio de la‎
38:32
‎servicio de crear ese bloque para continuar‎
38:35
‎a la cadena de consenso de hecho el valor‎
38:39
‎de esta transacción de creación de monedas tiene un‎
38:42
‎propiedad interesante es crítica a los 25‎
38:45
‎bitcoins pero en realidad tiene cada cuatro‎
38:48
‎años que ahora estamos en el segundo período para‎
38:51
‎los primeros cuatro años de bitcoins‎
38:52
‎existencia era 50 bitcoins ahora son 25‎
38:54
‎y va a seguir teniendo esto tiene‎
38:57
‎algunas consecuencias interesantes que vendremos‎
38:58
‎volver a eso en la siguiente diapositiva, pero dejemos‎
39:00
‎te pregunto esto aparece en base a lo que‎
39:02
‎He dicho aquí que este nodo obtiene el‎
39:05
‎bloquear la recompensa independientemente de si‎
39:08
‎propone un bloque con sólo válido‎
39:10
‎transacciones o se comporta maliciosamente‎
39:12
‎entonces, ¿cómo estamos realmente proporcionando cualquier‎
39:15
‎incentivos para un comportamiento honesto a través de esto‎
39:17
‎bloquear recompensa pero pensé en pensar en‎
39:20
‎así, ¿cómo será el tipo nevado de‎
39:22
‎conseguir recoger su recompensa que sólo‎
39:25
‎suceder si este bloque termina en el largo‎
39:28
‎rama de consenso de términos porque esa es la‎
39:30
‎único caso en el que esta creación de moneda‎
39:34
‎la transacción se considerará válida‎
39:35
‎porque la transacción de creación de monedas es‎
39:37
‎no es especial, es como cualquier otro‎
39:39
‎transacción solo es válida si finaliza‎
39:41
‎arriba en la cadena de consenso, así que ese es el‎
39:43
‎mecanismo de incentivos aquí es muy‎
39:44
‎sutil pero es un truco muy prolijo y así‎
39:47
‎incentiva a los nodos a comportarse honestamente‎
39:49
‎o como mínimo incentiva‎
39:51
‎nodos para comportarse de una manera que piensen‎
39:54
‎otros nodos van a estar de acuerdo con en‎
39:57
‎crear los siguientes bloques de la‎
39:59
‎blockchain, así que ese es el primero en su lugar‎
40:03
‎de mecanismo volvamos a esto‎
40:04
‎punto ahora este extraño tipo de tener‎
40:08
‎fenómeno que vemos aquí y esto puede‎
40:12
‎estar mejor ilustrado gráficamente aquí estoy‎
40:14
‎te lo mostraremos‎
40:15
‎gráfico del tiempo en el eje x frente al‎
40:19
‎número total de bitcoins en circulación‎
40:20
‎y este aquí fue el primer período‎
40:24
‎donde cada bloque resultó en 50 nuevos‎
40:27
‎bitcoins que se están creando y aproximadamente en‎
40:30
‎a finales del año pasado esa recompensa en bloque‎
40:31
‎mitades de 50 a 25 y se puede ver‎
40:34
‎que cada cuatro años se extiende bien‎
40:36
‎en el futuro la pendiente de esta curva‎
40:38
‎va a seguir teniendo y esto es un‎
40:41
‎series geométricas y es posible que sepas que‎
40:43
‎significa que hay una suma finita y‎
40:45
‎de hecho, hay un suministro finito total‎
40:47
‎de bitcoins y si sumas todos estos‎
40:49
‎números que calculan a 21 millones basados en‎
40:52
‎sobre la tasa de creación de nuevos bloques que‎
40:54
‎Voy a llegar en un segundo también‎
40:56
‎vale la pena señalar que este es el único‎
40:58
‎forma en que se crean nuevos bitcoins‎
40:59
‎no hay otra generación de monedas‎
41:02
‎y por eso este es un final‎
41:04
‎y número total como regla Sandow en‎
41:06
‎menos‎
41:06
‎por cuántos bitcoins puede haber‎
41:09
‎y esta nueva recompensa de creación de bloques es‎
41:12
‎en realidad se va a agotar en 2040 como‎
41:14
‎las cosas se mantienen ahora, así que suena un poco‎
41:17
‎extraño ¿eso significa que el sistema‎
41:20
‎dejará de funcionar en 2040 y se convertirá en‎
41:22
‎inseguro porque los nodos ya no tienen‎
41:25
‎el incentivo para comportarse honestamente bien‎
41:27
‎no del todo porque este es solo el primero‎
41:29
‎de dos mecanismos de incentivos existe‎
41:31
‎otro mecanismo de incentivo llamado‎
41:33
‎la tarifa de transacción y qué es un‎
41:35
‎tarifa de transacción para que el creador de cualquier‎
41:38
‎transacción no es el creador de un bloque‎
41:40
‎con el creador de una transacción cuando‎
41:41
‎Alice le está pagando a Bob lo que puede hacer es‎
41:44
‎puede elegir hacer el valor de salida‎
41:46
‎de esa moneda menor que el valor de entrada‎
41:48
‎y la forma en que todos los nodos interpretan‎
41:52
‎esta diferencia según las reglas‎
41:53
‎de Bitcoin es que es una transacción‎
41:55
‎y quien cree el bloque que‎
41:58
‎primero pone esa transacción en el‎
42:00
‎blockchain llega a recopilar eso‎
42:02
‎tarifa de transacción, así que si eres un nodo‎
42:05
‎es decir, crear un bloque que contenga‎
42:06
‎digamos 200 transacciones y luego la suma de todas‎
42:10
‎esas 200 comisiones de transacción se devengan a‎
42:12
‎usted y a la dirección que puso en‎
42:14
‎ese bloque, por supuesto, esta transacción‎
42:17
‎la tarifa es puramente voluntaria como una propina, pero‎
42:19
‎esperamos en base a nuestra comprensión‎
42:22
‎del sistema que como el bloque recompensa‎
42:24
‎comienza a agotarse, se volverá más‎
42:27

40:12
estar mejor ilustrado gráficamente aquí estoy
40:14
el
11:42
transacciones pendientes que tiene
11:44
oído hablar de así recordar que para estos
11:46
el consenso de las transacciones aún no ha sido
11:48
sucedió y así casi por definición
11:50
cada nodo puede tener un
11:52
versión diferente de la sobresaliente
11:54
transacciones de las que se ha oído hablar de la
11:56
la red peer-to-peer no es perfecta, por lo que
11:57
es posible que algún nodo haya oído hablar de un
11:58
transacción pero no otros nodos así dados
12:01
que tenemos la configuración de lo que podría
12:03
suceder es que tienes la secuencia de
12:06
bloques que todo el mundo ha acordado un
12:08
bloque es sólo una serie de transacciones
12:11
y ahora hay estos digamos estos
12:14
tres nodos en el sistema, cada uno de los cuales
12:16
propone que cada uno de los cuales tiene una entrada el
12:18
conjunto de transacciones pendientes que
12:20
se oye hablar de él y ejecutan
12:22
juntos algún protocolo de consenso y para
12:26
el protocolo de consenso para que le suceda
12:28
puede seleccionar cualquier bloque válido incluso si es
12:31
un bloque que fue propuesto por un solo
12:32
y para que un bloque sea válido todo
12:35
estas transacciones tienen que tener el
12:36
firmas criptográficas correctas, etc., para que usted
12:40
podría seleccionar cualquiera de estos bloques válidos
12:42
y el protocolo de consenso seguiría siendo
12:45
estar bien si algunas transacciones de alguna manera
12:47
no llegó a este particular
12:48
bloque que se elige como resultado de
12:50
un protocolo de consenso que podría esperar
12:52
y entrar en el siguiente bloque, así que tal vez
12:54
este bloque verde se selecciona ahora que
12:57
se agrega a la cadena de bloques de consenso
12:59
y luego el protocolo procede y
13:00
rutas así que si tomaste las tradicionales
13:03
teoría del consenso distribuido y
13:05
aplicado que a Bitcoin este es el tipo
13:07
del sistema con el que podría terminar ahora
13:10
esto tiene algunas similitudes con cómo
13:12
Bitcoin funciona, pero no es exactamente cómo
13:14
Bitcoin funciona y por qué es eso y el
13:16
la razón de esto es simple hacer cosas
13:18
de esta manera es una técnica realmente difícil
13:20
problema por una variedad de razones allí
13:22
son algunos obvios, los nodos podrían bloquearse
13:25
y los nodos pueden ser totalmente maliciosos
13:27
pero también porque la red es altamente
13:30
imperfecto es un sistema peer-to-peer no
13:32
todos los pares de nodos están conectados a cada uno
13:34
otro
13:35
podría haber errores en la red
13:36
debido a la mala conectividad a internet
13:38
y así sucesivamente y finalmente va a
13:41
tener mucha latencia en el sistema
13:43
porque todas estas cosas suceden
13:45
internet ni siquiera están dentro de un
13:46
un solo centro de datos o algo así como
13:48
eso y una consecuencia particular de
13:52
esta latencia alta es que no hay
13:54
noción de tiempo global ¿qué hace esto?
13:56
significa y por qué es esto importante que significa
13:58
que no todos los nodos pueden estar de acuerdo con un
14:02
ordenación de eventos simplemente basada en
14:04
observar marcas de tiempo simplemente no lo hace
14:06
trabajar así, así que no es posible
14:08
diseña tu protocolo diciendo cosas
14:10
como tomar el nodo que envió el primero
14:13
en el paso uno y tener ese nodo
14:15
haz algo en el paso dos que simplemente no puedes
14:17
trabajo así
14:17
porque no todos los nodos estarán de acuerdo
14:20
qué mensaje se envió primero en el cuadro de diálogo
14:22
primer paso del protocolo por lo que este
14:24
realmente pone serias limitaciones a lo que
14:27
tipos de algoritmos que realmente puedes poner
14:29
en sus protocolos de consenso y en
14:31
hecho debido a estas limitaciones mucho
14:34
de la literatura distribuida
14:35
el consenso es algo pesimista y
14:37
muchos resultados de imposibilidad han sido
14:39
probado que solo voy a nombrar un par
14:41
de estos en caso de que quieras mirarlos
14:43
arriba pero no voy a entrar en demasiados detalles
14:45
un resultado de imposibilidad que es muy
14:47
bien conocido y bastante simple de
14:48
entender se llama el bizantino
14:50
problema general y mucho más sutil
14:52
uno conocido por los nombres de los autores
14:55
quien lo demostró por primera vez se llama el Pescador
14:57
Lynch Patterson y los posibles resultados
14:59
bajo algunas condiciones que incluyen el
15:02
nodos que actúan de manera determinista
15:03
lo que demostraron es que el consenso es
15:05
imposible incluso con un solo defecto
15:08
proceso así a pesar de estas imposibilidades
15:10
resultados hay algunos bien conocidos
15:12
protocolos y Paxos es probablemente uno de
15:15
el más conocido y lo que hace Paxos es
15:17
hace ciertos compromisos lo que hace
15:20
lo que te da es que nunca produce un
15:22
resultado inconsistente que sería
15:23
realmente malo pero acepta la compensación
15:26
que bajo ciertas condiciones aunque
15:28
raros el protocolo puede atascarse y
15:30
no pudo hacer ningún progreso, pero aquí está
15:33
lo interesante
15:34
estos resultados de imposibilidad fueron usted
15:37
saber que fueron probados en un
15:38
modelo que estaban destinados a estudiar
15:40
bases de datos distribuidas y este modelo
15:41
no se traslada tan bien - esto es un
15:45
establecer que Bitcoin opera bajo así
15:47
lo que estos resultados realmente nos dicen más
15:49
sobre ellos
15:49
modelar entonces sobre el problema de hecho y
15:53
lo que hace bitcoin es que viola un
15:56
muchas de las suposiciones que entran en
15:58
estos modelos y por eso
15:59
El consenso en Bitcoin irónicamente funciona
16:02
mejor en la práctica que en la teoría y
16:04
lo que esto realmente significa es que el
16:06
teoría que fue desarrollada para un
16:08
diferente conjunto de problemas necesita atrapar
16:10
arriba para poder decir realmente
16:12
cosas interesantes sobre Bitcoin pero
16:14
sin embargo, esa teoría es bastante
16:15
importante porque por ejemplo puede
16:18
ayúdanos a predecir ataques imprevistos y
16:20
realmente ser capaz de llegar a ser fuerte
16:23
garantías sobre la naturaleza del consenso
16:25
y la seguridad en Bitcoin, así que ¿qué son
16:29
estos diferentes supuestos lo que son
16:30
algunas cosas que hace Bitcoin
16:31
diferentemente bien en primer lugar que todo
16:33
introduce la idea de incentivos y
16:35
esto es muy diferente de cualquier anterior
16:38
sistema para el consenso distribuido y
16:40
esto solo es posible en Bitcoin porque
16:42
es una moneda y puedes usar eso
16:44
moneda para dar incentivos a la
16:46
participantes por actuar honestamente y así
16:50
Bitcoin no resuelve del todo el
16:51
problema de consenso distribuido en un
16:53
sentido general pero lo resuelve en el
16:55
contexto del sistema monetario el otro
16:57
lo que hace diferente es que
16:59
realmente abraza la noción de
17:00
aleatoriedad y lo que quiero decir con eso es
17:02
una de las cosas que hace es que hace
17:04
lejos con la noción de un
17:06
punto de partida y punto final para
17:07
el consenso, en cambio, el consenso ocurre sobre
17:11
un largo período de tiempo de aproximadamente una hora en
17:13
el sistema práctico y pero incluso en el
17:15
al final de ese tiempo no eres cien
17:16
porcentaje seguro de que una transacción o un
17:19
bloque que te interesa ha hecho
17:20
en su lugar, en la cadena de bloques de consenso
17:23
a medida que pasa el tiempo, su probabilidad aumenta
17:26
cada vez más alto y la probabilidad
17:28
que te equivocas al hacer un
17:29
la suposición sobre una transacción disminuye
17:32
exponencialmente así que ese es el tipo de
17:35
garantía inherentemente probabilística de que
17:37
Bitcoin te da y por eso es
17:39
capaz de sortear completamente estos
17:41
tradicionalmente en tradicional
17:43
resultados de imposibilidad en distribuido
17:44
protocolos de consenso
17:46
tú
17:50
así que profundicemos ahora en lo técnico
17:52
detalles del algoritmo de consenso de bitcoins
17:54
y mientras miramos eso,
17:57
Debe tener en cuenta que Bitcoin lo hace
17:58
todo esto sin que los nodos tengan ninguna
18:01
identidades persistentes a largo plazo y esto
18:03
es una vez más una diferencia de cómo
18:05
consenso de distribución tradicional
18:07
algoritmos operados y si las notas lo hicieron
18:09
tener identidades haría que las cosas fueran un
18:11
mucho más fácil por un par de razones uno
18:13
es una razón pragmática que te permitiría
18:15
para poner en su protocolo cosas como
18:17
ahora el nodo con el número más bajo
18:20
ID debe dar algún paso o algo así
18:22
así que eso es un simple pragmático
18:24
razón que ya si los noes son
18:26
completamente anónimo se vuelve más difícil de
18:27
no hace más que una razón mucho más seria para
18:31
nodos para tener identidades en cuanto a seguridad
18:33
porque si se identificaron nodos y
18:35
no eran triviales para crear nuevos nodos
18:37
identidades de nodo ident entonces podríamos hacer
18:40
suposiciones como digamos que menos
18:42
que el 50% de los nodos son maliciosos y
18:44
podríamos derivar propiedades de seguridad
18:45
de ello, por ambas razones, el
18:49
El protocolo de consenso en Bitcoin es un poco
18:51
más difícil, pero ¿por qué es exactamente el Bitcoin?
18:54
los nodos no tienen identidades bien, es
18:56
por un par de razones
18:57
una es que si estás en un descentralizado
18:59
modelo en un sistema peer-to-peer hay
19:01
no hay autoridad central para dar identidades
19:05
a los nodos y compruebe que no lo son
19:06
crear nuevos nodos a voluntad y de hecho
19:10
el término técnico para esto es un Sybil
19:11
atacar
19:12
Las Sybil son solo copias de nodos que un
19:14
adversario malintencionado puede crear para mirar
19:16
como que hay un montón de diferentes
19:18
participantes cuando en realidad todos aquellos
19:19
pseudo participantes son realmente
19:21
controlado por el mismo adversario el
19:24
otra razón es que el seudónimo
19:26
es inherentemente un objetivo de Bitcoin, incluso si
19:28
era posible o fácil de establecer
19:30
identidades para todos los nodos o todos
19:32
participantes no necesariamente lo haríamos
19:34
quiero hacer eso para que bitcoin no dé
19:37
su fuerte anonimato garantiza fuera de
19:39
la caja y eso es lo diferente
19:41
las transacciones que realice probablemente puedan
19:43
estar unidos entre sí pero al mismo tiempo
19:45
nadie te está obligando a poner tu verdadero
19:48
identidad de vida como su nombre o IP
19:51
dirección o algo así
19:52
con el fin de participar en el
19:54
red peer-to-peer y en el
19:55
blockchain y eso es importante
19:56
así que lo que podemos hacer en su lugar es nosotros
20:02
puede hacer una suposición más débil
20:04
y quiero que des un salto de
20:06
fe conmigo aquí que este más débil
20:08
la suposición es algo que va
20:11
para ser factible y voy a hacer
20:12
esta suposición aquí y más adelante le muestran
20:14
cómo se logra esto realmente y
20:16
lo que es esta suposición más débil es que
20:18
vamos a suponer que hay algunos
20:20
capacidad de alguna manera para elegir un nodo aleatorio en
20:22
el sistema y una buena analogía motivadora
20:25
para esto es una lotería o una rifa o
20:28
cualquier número de sistemas de la vida real
20:30
estamos rastreando y verificando personas y
20:32
dándoles identidades y verificando
20:34
esas identidades son bastante difíciles y por lo tanto
20:36
lo que hacemos en esos contextos es que podríamos
20:37
darles tokens o boletos o algo así
20:40
de ese tipo y que luego nos permite
20:42
Más tarde, elija un ID de token aleatorio y llame
20:44
sobre esa persona, así que vamos a hacer
20:47
algo similar con respecto a estos
20:48
Bitcoin notas y asumir aún más para el
20:51
momento que esta generación de tokens y
20:53
el algoritmo de distribución tiene suficiente inteligencia
20:55
para que si el adversario lo va a intentar
20:58
para crear muchos nodos Sybil juntos
21:00
todos esos símbolos solo obtienen un token
21:02
por lo que el adversario no es capaz de multiplicarse
21:04
su poder de esa manera, así que hagamos esto
21:07
suposición por ahora y veamos qué
21:09
se hace posible si hacemos esto
21:11
suposición aquí está la idea clave de lo que
21:14
se hace posible bajo este supuesto
21:16
de selección aleatoria de nodos es algo
21:19
llamado consenso implícito por lo que es
21:22
consenso implícito en cada ronda y
21:24
va a haber varias rondas
21:26
cada ejecución corresponde a una
21:27
Bloque en la cadena de bloques en cada ronda a
21:30
el nodo aleatorio está seleccionado de alguna manera
21:31
mágicamente por el momento y este nodo
21:34
llega a proponer el siguiente bloque en el
21:35
cadena no hay algoritmo de consenso
21:37
no hay votación este nodo simplemente
21:39
propone unilateralmente lo que el próximo
21:41
bloque y la cadena de bloques va a ser
21:43
pero ¿qué pasa si ese nodo es malicioso bien?
21:46
hay un proceso para esto, pero es un
21:49
implícito uno otro nodo implícitamente
21:51
aceptar o rechazar ese bloqueo y cómo
21:54
lo hacen si aceptan ese bloque
21:56
señalarán que la aceptación
21:58
extendiendo el inicio de la cadena de bloques
22:01
de ese bloque o si lo rechazan
22:03
bloquearán extenderán la cadena por
22:05
ignorar ese bloque y comenzar desde
22:07
cualquiera que fuera el último bloque anterior
22:10
en la cadena de bloques y técnicamente cómo es
22:13
que implementado recuerda que cada bloque
22:15
contiene un hash del bloque que
22:18
y este es el mecanismo técnico que
22:21
permite necesidades para indicar qué bloque es
22:23
que se están extendiendo así dado esto
22:27
esto es lo que el consenso general
22:29
Algoritmo en Bitcoin va a mirar
22:31
como ahora, esto está un poco simplificado
22:33
y la razón por la que se simplifica es de nuevo
22:35
que estoy asumiendo una especie de magia
22:37
proceso de selección de nodos aleatorios, pero excepto
22:40
para esa simplificación esto es bonito
22:42
cerca de cómo funciona realmente Bitcoin
22:44
así que cada vez que Alice quiere pagarle a Bob ella
22:47
creará una transacción y ella
22:49
difundirlo a todos los nodos y a cualquier
22:52
uno de estos nodos está constantemente
22:53
escuchar la red y recopilar
22:55
una lista de transacciones pendientes que
22:57
aún no han llegado a la cadena de bloques
22:59
en algún momento uno de estos nodos es
23:02
va a ser llamado al azar a
23:03
proponer el siguiente bloque al que va a
23:05
redondea todos los destacados
23:07
transacciones de las que se ha oído hablar y
23:08
proponer que bloque ahora presumiblemente que
23:12
node fue honesto, pero también podría ser un
23:14
nodo malicioso o un nodo defectuoso y
23:16
proponer un bloque que contenga algunos
23:18
transacciones no válidas no válidas
23:20
las transacciones son aquellas que no tienen
23:23
la firma criptográfica correcta o donde el
23:26
la transacción ya se ha gastado en otros
23:27
palabras un intento de doble gasto por lo que si
23:30
que sucede otros nodos van a
23:33
señalar su aceptación o rechazo de
23:35
el bloque como vimos en la última diapositiva por
23:37
ya sea incluyendo el hash de este último
23:39
bloquear en su siguiente bloque o ignorar
23:42
este bloque e incluyendo el hash de
23:44
cualquiera que fuera el bloque anterior que
23:46
consideran que es válido todo bien
23:49
así que ahora tratemos de entender por qué esto
23:51
El algoritmo de consenso funciona y la forma en que
23:53
me gusta entender que esto es en lugar de
23:55
preguntando por qué funciona esto, tratemos de preguntar
23:57
¿cómo puede un adversario malintencionado intentar
24:00
subvertir este proceso, así que veamos
24:03
que por un segundo así que aquí tenemos un
24:05
par de bloques en la cadena de bloques
24:07
supongamos que esto se extiende a la izquierda a
24:09
largo camino de regreso hasta lo que es
24:11
llamado el bloque Génesis pero aquí estoy
24:13
solo te muestra un par de bloques en
24:15
la cadena de bloques y ese puntero que tú
24:16
ver por encima hay un bloque que hace referencia a
24:20
¿cuál es el bloque anterior que es?
24:21
se extiende incluyendo un hash de que
24:24
bloque anterior dentro de su propio contenido
24:26
así que vamos a atacar a Tamil Isha
24:29
llámala Alicia qué podría intentar hacer
24:32
¿puede simplemente robar bitcoins que pertenecen?
24:35
a otro usuario en una dirección diferente
24:36
que ella no controla ahora, incluso si es
24:40
es ahora el turno de Alicia de proponer el próximo
24:43
bloque en esta cadena que no puede robar
24:45
otros usuarios bitcoins por qué porque ella
24:48
no pueden falsificar sus firmas por lo tanto tiempo
24:50
como la criptografía subyacente es sólida, ella es
24:52
no puede simplemente robar bitcoins
24:54
otra cosa que podría tratar de hacer es si
24:57
ella realmente odia a algún otro usuario
24:59
Bob entonces ella puede mirar la dirección de Bob
25:01
y ella puede decidir que cualquier transacción
25:04
originando la dirección de Bob ella
25:06
simplemente no incluirlos en ningún bloque
25:08
que ella propone subir al
25:10
blockchain en otras palabras, ella está negando
25:13
servicio a Bob por lo que este es un ataque válido
25:15
que puede intentar montar pero por suerte
25:18
no es más que un poco
25:19
molestia porque si el bloqueo de Bob no
25:22
conviértelo en el siguiente bloque que alicia
25:23
propone que solo esperará otra cuadra
25:26
hasta que un nodo honesto tenga la oportunidad de
25:28
proponer un bloque y luego su transacción
25:30
entrará en ese bloque, así que eso no es
25:32
realmente un buen ataque tampoco, así que el único
25:34
uno que realmente se quedó con qué
25:36
un nodo malintencionado puede intentar hacer aquí es
25:38
llamado un ataque de doble gasto, así que cómo
25:41
¿podría un ataque de doble gasto funcionar para
25:43
entender que supongamos que alicia
25:45
es cliente de algún comerciante en línea o
25:49
un sitio web dirigido por bob que proporciona algunos
25:52
servicio en línea a cambio de pago
25:54
en bitcoins digamos que nos permite
25:56
descargar de algún software, así que así es como
25:58
un ataque de doble gasto podría funcionar
26:00
Alice va al sitio web de Bob y decide
26:04
para comprar este artículo lo paga con
26:06
bitcoins y lo que eso significa en
26:08
términos técnicos es que ella va a
26:10
crear una transacción de Bitcoin a partir de ella
26:13
dirección - La dirección de Bob que ella transmite
26:16
a la red y digamos que
26:18
algún nodo honesto crea el siguiente bloque
26:21
escucha esta transacción e incluye
26:24
está en ese bloque, así que lo que está pasando
26:27
aquí está este bloque que fue
26:29
creado por un nodo honesto que contiene
26:31
una transacción que representa un pago
26:34
de Alicia al comerciante Bob por C
26:36
subíndice a Me refiero a una moneda que pertenece a
26:39
Alice y eso ahora está siendo enviado a
26:41
La dirección de Bob vamos a acercarnos a esto y a un
26:44
un poco más técnico
26:45
Cola de una transacción como vimos anteriormente como
26:48
una estructura de datos que contiene Alice's
26:51
firma aquí y una instrucción para pagar
26:53
a la clave pública de Bob y también a un hash
26:56
¿qué es este hash, este hash representa un
26:58
puntero a la transacción donde Alice
27:01
de hecho recibió esa moneda de alguien
27:03
else y eso debe ser un puntero a un
27:05
transacción que se incluyó en algunos
27:08
bloque anterior en la cadena de consenso por lo que
27:10
visualmente se va a ver algo
27:11
como este, hagamos una pausa por un segundo aquí
27:15
porque hay algo sutil en marcha
27:17
en hay al menos dos diferentes
27:19
tipos de punteros en este diagrama que
27:21
Te he demostrado que de hecho hay un tercero
27:23
uno correspondiente a los árboles de Merkel, pero
27:24
no vamos a ver eso en el
27:26
momento presente pero estos dos tipos de
27:29
los punteros a los que me refiero son bloques que
27:33
incluir un hash del bloque anterior
27:34
que están extendiendo y transacciones
27:37
que incluyen un puntero a lo que sea el
27:40
transacción anterior que donde la moneda
27:42
vino de derecha, así que esta es la situación
27:45
y este bloque fue generado ahora por un
27:50
nodo honesto y ahora supongamos que
27:52
la próxima vez que se llame a una nota aleatoria
27:55
ese nodo es un nodo malintencionado controlado
27:59
por Alice derecho así que esta es la cadena de bloques
28:01
tal como está ahora mismo, bob ya lo ha hecho
28:03
miré esta cadena de bloques decidí que
28:05
alice le ha pagado y ha permitido a Alice
28:08
para descargar el software o lo que sea
28:10
es que ella estaba comprando en su sitio web
28:12
Así que en lo que respecta a Bob, él es
28:15
satisfecho de que la transacción se haya completado
28:16
Alice ahora ha recibido sus bienes en
28:19
cambiar por el pago ahora lo que podría
28:21
Suceder es si Alicia ahora llega a proponer
28:24
el siguiente bloque podría proponer un bloque
28:26
que parece que esto ignora por completo
28:29
este bloque válido aquí y en su lugar
28:32
contiene un puntero al bloque anterior
28:34
y además va a contener un
28:38
transacción que contiene una transferencia de
28:41
monedas de las monedas de Alicia a otro
28:43
abordar un número primo que también está controlado
28:45
por Alice por lo que este es un doble clásico
28:49
patrón de gasto lo que está sucediendo aquí es
28:51
Alice ahora crea una nueva transacción que
28:55
transfiere esa moneda en lugar de a Bob's
28:57
dirección a otra dirección
28:59
por ella y visualmente se va a ver
29:01
como este, este es un lugar completamente diferente
29:02
transacción también con el puntero hash
29:04
volver a la misma transacción
29:06
referido a derecho anterior, por lo que esto es
29:09
qué intento de un doble gasto
29:11
me gusta y cómo sabemos si este doble
29:14
el intento de gasto va a tener éxito o no
29:16
bueno, eso depende de si este verde
29:19
transacción aquí o esta transacción roja
29:21
va a terminar finalmente en el
29:23
cadena de consenso a largo plazo, así que qué
29:26
determina que eso está determinado por
29:28
el hecho de que los nodos honestos son siempre
29:31
siguiendo la política de ampliación de la
29:33
rama válida más larga, así que ahora cuál de
29:36
esta es la rama válida más larga que tiene
29:38
podría mirar esto y decir AHA el primero
29:40
una es la rama válida más larga, no la
29:42
segundo porque es un doble gastado
29:43
intento, pero aquí hay un punto muy sutil
29:46
que quiero que aprecies de sort
29:48
desde un punto de vista moral esto
29:50
transacción en verde en la transacción
29:51
el rojo puede verse muy diferente porque
29:54
basado en la explicación que he dado
29:57
tú el primero es un intento de Alice
29:59
para pagarle a Bob, mientras que el segundo es un
30:01
intento de Alice de defraudar a Bob y pagar
30:04
monedas de vuelta a sí misma pero de un
30:06
punto de vista tecnológico estos dos
30:08
las transacciones son completamente idénticas
30:10
los nodos que están analizando esto
30:12
realmente no tengo forma de saber cuál es
30:14
la transacción legítima y el putting
30:16
legítimo en las citas aéreas porque es un
30:18
el juicio moral que le aplicamos es
30:20
no es una distinción técnica versus cuál
30:23
uno es el intento de duplicarlo.
30:24
podría ser fácilmente al revés
30:26
ahora los nodos a menudo siguen una heurística de
30:30
extendiendo el bloque que primero
30:31
oído hablar de la red peer-to-peer
30:33
pero no es una regla sólida y en cualquier
30:35
caso debido a la latencia de red que
30:37
podría ser fácilmente al revés, así que
30:41
ahora hay al menos alguna posibilidad de que
30:43
el siguiente nodo que llega a proponer un
30:45
el bloque extenderá este bloque en lugar de
30:47
este o podría ser que incluso si
30:49
es un nodo honesto que Alice podría intentar
30:51
sobornar ese nodo o intentar subvertir el
30:53
procesar de diversas maneras para
30:55
cualquier razón sin ir demasiado
30:57
en los detalles digamos que el siguiente
30:59
el nodo extiende el bloque con el rojo
31:01
transacción en lugar de la verde
31:03
lo que esto significa es que en este punto
31:06
el siguiente nodo honesto es mucho más probable
31:08
para extender este bloque en lugar de este
31:10
porque ahora esto se ha convertido en el largo
31:12
cadena valo así que digamos que después de uno
31:16
más bloque la situación se ve así
31:17
ahora está empezando a parecer bastante probable
31:19
que este doble giro ha tenido éxito en
31:21
de hecho lo que podría suceder es que esto termine
31:24
subir la cadena de consenso a largo plazo y
31:26
este bloque es completamente ignorado por
31:29
la red y ahora se denomina
31:31
bloque huérfano y este es un ejemplo de un
31:34
doble gasto exitoso, así que ahora vamos a
31:36
mira toda esta situación de Bob
31:38
el punto de vista de los comerciantes y
31:40
comprender cómo Bob puede proteger
31:42
él mismo de este ataque de doble gasto
31:43
realmente va a ser una parte clave de
31:45
entendiendo la seguridad de Bitcoin, así que vamos a
31:47
mira lo que pasó aquí de nuevo tenemos
31:50
un par de bloques en la cadena de bloques y
31:52
en este punto
31:54
Alice transmite una transacción que
31:56
representa su pago a Bob y así Bob
31:58
va a oír hablar de ello en el
32:00
red peer-to-peer aquí mismo, incluso
32:02
antes de que se cree el siguiente bloque y
32:04
para que Bob pueda hacer algo aún más
32:07
temerario que lo que hizo en el
32:09
luz previa que es que tan pronto como
32:11
se entera de la transacción en el
32:12
red peer-to-peer puede completar el
32:14
transacción en el sitio web y permitir
32:16
Alice para descargar lo que sea
32:18
descarga que se denomina cero
32:20
transacción de confirmación o podría
32:24
espere hasta que la transacción obtenga uno
32:26
confirmación en la cadena de bloques que
32:28
significa que al menos algún nodo tiene
32:32
ha creado un bloque y ha propuesto esto
32:35
transacción y que ha entrado en el
32:37
blockchain pero como vimos anteriormente incluso
32:40
después de una confirmación podría haber un
32:42
intentar un doble gasto, digamos
32:44
que esto realmente sucede si como en el
32:47
diapositiva anterior el intento de doble gasto
32:49
lo que Bob debería hacer es
32:51
darse cuenta de que el bloque que él pensaba
32:53
representada Alicia pagándole tiene ahora
32:56
ha quedado huérfana y ella lo es y por lo tanto él debería
32:57
en su lugar, abandone la transacción si es así
33:01
sucede que a pesar de este doble gasto
33:02
intente el siguiente bloque que se genera
33:05
resulta extender el bloque que es
33:08
interesado en ahora ve que su
33:11
la transacción tiene dos confirmaciones en el
33:13
blockchain ahora obtiene un poco más
33:16
confianza en que su transacción va a marchar
33:18
para terminar en el consenso a largo plazo
33:19
cadena así que digamos que hay una más y
33:22
ahora hay tres confirmaciones en
33:24
general
33:25
cuantas más confirmaciones tenga su transacción
33:27
obtiene cuanto mayor sea la probabilidad de que
33:29
va a terminar a largo plazo
33:31
cadena de consenso porque si recuerdas
33:33
el comportamiento honesto de los nodos que lo harán
33:35
extender siempre la rama válida más larga
33:38
que ven la posibilidad de que este
33:40
va a ponerse al día con esto por más tiempo
33:42
la rama es ahora muy minúscula, especialmente
33:45
si sólo una minoría de los nodos son
33:47
malicioso porque normalmente es el único
33:50
razón por la que este intento de doble tramo
33:52
el bloque se extendería en este punto es
33:54
si el siguiente nodo que se va a elegir aleatoriamente
33:56
era un nodo malicioso y entonces necesitaría
33:58
otro nodo malintencionado y luego otro
33:59
para que la rama más corta se convierta en
34:01
la rama más larga en general la doble
34:06
la probabilidad de span disminuye exponencialmente
34:09
con el número de confirmaciones así que si
34:12
la transacción que te interesa tiene
34:14
recibió K confirmaciones y luego el
34:16
probabilidad de que esta otra transacción
34:17
va a terminar a largo plazo
34:19
la cadena de consenso baja exponencialmente
34:21
en función de K en el más común
34:24
heurística que se utiliza en el Bitcoin
34:26
ecosystem is that you wait for six
34:28
confirmations there is nothing really
34:30
special about the number six it's just a
34:32
good trade-off between the amount of
34:34
time you have to wait and your guarantee
34:36
that the transaction you're interested
34:38
in ends up on the consensus watching so
34:42
let's recap what we saw here protection
34:46
against invalid transactions that is
34:48
protection against a malicious node
34:49
simply making up a transaction to steal
34:51
someone's bitcoins is entirely
34:53
cryptographic but it is enforced by
34:56
consensus which means that if a node
34:59
does attempt that then the only reason
35:01
that that transaction won't end up in
35:03
the long term consensus chain is because
35:05
a majority of the nodes are honest and
35:06
will treat that transaction as invalid
35:08
on the other hand protection against
35:11
double spending is purely about
35:12
consensus
35:13
cryptography has nothing to say about
35:15
this and true transactions that
35:17
represent a double spending attempt kind
35:20
of look identical from the perspective
35:22
of signatures and so on but it's the
35:24
consensus that determines which one will
35:26
end up on the long term consensus chain
35:28
and finally you're never 100% sure that
35:31
a transaction you're interested in is on
35:33
the consensus branch but this
35:35
exponential probability guarantee is
35:37
pretty good after about six transaction
35:39
there's virtually no chance that that
35:41
you're going to go wrong
35:48
so in the previous section we got a
35:51
basic look at bitcoins consensus
35:53
algorithm and a good intuition for why
35:56
we believe that it's secure but recall
35:58
that at the beginning of the lecture I
36:00
told you that bitcoins decentralization
36:02
is partly a technical mechanism and
36:04
partly clever incentive engineering
36:06
so far we've mostly looked at the
36:08
technical mechanism now let's talk about
36:10
the incentive engineering that happens
36:12
in Bitcoin I asked you to take a leap of
36:16
faith with me earlier in assuming that
36:18
we're able to pick a random node and
36:20
perhaps more problematically that at
36:23
al menos el 50% de las veces este proceso lo hará
36:25
elija un nodo honesto, pero por supuesto esto
36:27
la asunción de la honestidad es bastante
36:28
problemático especialmente si hay
36:30
incentivos financieros para que los participantes
36:32
subvertir esto, entonces, ¿por qué esperaríamos
36:34
cualquier nodo para ser honestos realmente así que lo que nosotros
36:36
quiero preguntar es si podemos dar a los nodos un
36:39
incentivo para comportarse honestamente, hagamos
36:41
mira esto con respecto a la imagen
36:43
hemos estado viendo que este es el
36:45
cadena de consenso a largo plazo y este bloque
36:47
contiene un intento de duplicar el gasto que tenemos
36:50
¿podemos preguntar podemos penalizar de alguna manera el nodo?
36:52
que creó este bloque pero esto es
36:55
problemático por varias razones
36:56
incluyendo el hecho de que los nodos no tienen
36:58
identidades y por lo tanto no hay forma de ir
37:00
después de ellos para penalizarlos, así que en su lugar
37:02
demos la vuelta a la pregunta y preguntemos
37:04
¿podemos recompensar a los nodos que crearon todo?
37:07
estos bloques que terminaron en el largo
37:09
cadena de consenso de términos bien de nuevo algo así como
37:12
el mismo problema que no tenemos no
37:13
identidades para que no podamos enviarles dinero en efectivo
37:16
sus domicilios si tan solo hubiera
37:18
algún tipo de moneda digital que nosotros
37:20
puede utilizar para incentivarlos un
37:21
descentralizado tal vez usted probablemente
37:24
ver a dónde estoy llegando, en otras palabras.
37:26
vamos a usar bitcoins para
37:29
incentivar los nodos que los crearon
37:32
bloques entonces, ¿cómo vamos a hacer eso?
37:33
bueno hasta ahora todo lo que he dicho es
37:36
solo un algoritmo abstracto para lograr
37:39
consenso distribuido ahora vamos a
37:41
salir de ese modelo lo que voy
37:42
decir ahora es específico del hecho de que
37:44
lo que estamos logrando a través de esto
37:46
el proceso de consenso distribuido es, de hecho,
37:48
una moneda y vamos a
37:49
incentivar estos nodos pagándoles
37:52
en unidades de esta moneda, así que ¿cómo lo hacemos?
37:56
hacer que de hecho hay dos separados
37:58
mecanismos de incentivos en Bitcoin y el
38:00
la primera es
38:01
llamado la sala de bloqueo, así que ¿cuál es el
38:03
bloquear recompensa es solo esto de acuerdo con
38:06
las reglas de Bitcoin el nodo que
38:08
crea cada bloque, llega a incluir un
38:11
transacción especial en ese bloque y
38:12
esa transacción especial es una moneda
38:15
transacción de creación y este nodo puede
38:18
elija también la dirección del destinatario de
38:20
esta transacción, por supuesto, ese nodo
38:22
normalmente elegirá una dirección
38:24
perteneciendo a sí mismo como receptor de
38:26
esta transacción de creación de monedas por lo tanto
38:28
pagarse a sí mismo es algo que puedes pensar
38:30
de ella como pago a cambio de la
38:32
servicio de crear ese bloque para continuar
38:35
a la cadena de consenso de hecho el valor
38:39
de esta transacción de creación de monedas tiene un
38:42
propiedad interesante es crítica a los 25
38:45
bitcoins pero en realidad tiene cada cuatro
38:48
años que ahora estamos en el segundo período para
38:51
los primeros cuatro años de bitcoins
38:52
existencia era 50 bitcoins ahora son 25
38:54
y va a seguir teniendo esto tiene
38:57
algunas consecuencias interesantes que vendremos
38:58
volver a eso en la siguiente diapositiva, pero dejemos
39:00
te pregunto esto aparece en base a lo que
39:02
He dicho aquí que este nodo obtiene el
39:05
bloquear la recompensa independientemente de si
39:08
propone un bloque con sólo válido
39:10
transacciones o se comporta maliciosamente
39:12
entonces, ¿cómo estamos realmente proporcionando cualquier
39:15
incentivos para un comportamiento honesto a través de esto
39:17
bloquear recompensa pero pensé en pensar en
39:20
así, ¿cómo será el tipo nevado de
39:22
conseguir recoger su recompensa que sólo
39:25
suceder si este bloque termina en el largo
39:28
rama de consenso de términos porque esa es la
39:30
único caso en el que esta creación de moneda
39:34
la transacción se considerará válida
39:35
porque la transacción de creación de monedas es
39:37
no es especial, es como cualquier otro
39:39
transacción solo es válida si finaliza
39:41
arriba en la cadena de consenso, así que ese es el
39:43
mecanismo de incentivos aquí es muy
39:44
sutil pero es un truco muy prolijo y así
39:47
incentiva a los nodos a comportarse honestamente
39:49
o como mínimo incentiva
39:51
nodos para comportarse de una manera que piensen
39:54
otros nodos van a estar de acuerdo con en
39:57
crear los siguientes bloques de la
39:59
blockchain, así que ese es el primero en su lugar
40:03
de mecanismo volvamos a esto
40:04
punto ahora este extraño tipo de tener
40:08
fenómeno que vemos aquí y esto puede
40:12
estar mejor ilustrado gráficamente aquí estoy
40:14
going to show you
40:15
graph of time on the x-axis versus the
40:19
total number of bitcoins in circulation
40:20
and this over here was the first period
40:24
where each block resulted in 50 new
40:27
bitcoins being created and roughly at
40:30
the end of last year that block reward
40:31
halves from 50 to 25 and you can see
40:34
that every four years extending well
40:36
into the future the slope of this curve
40:38
is going to keep having and this is a
40:41
geometric series and you might know that
40:43
it means that there is a finite sum and
40:45
in fact there is a total finite supply
40:47
of bitcoins and if you add up all these
40:49
numbers it works out to 21 million based
40:52
on the rate of new block creation which
40:54
I'm going to get to in a second also
40:56
worth noting is that this is the only
40:58
way in which new bitcoins are created
40:59
there is no other coin generation
41:02
mechanism and that's why this is a final
41:04
and total number as a rule Sandow at
41:06
least
41:06
for how many bitcoins there can ever be
41:09
and this new block creation reward is
41:12
actually going to run out in 2040 as
41:14
things stand now so that sounds a bit
41:17
extraño ¿eso significa que el sistema
41:20
dejará de funcionar en 2040 y se convertirá en
41:22
inseguro porque los nodos ya no tienen
41:25
el incentivo para comportarse honestamente bien
41:27
no del todo porque este es solo el primero
41:29
de dos mecanismos de incentivos existe
41:31
otro mecanismo de incentivo llamado
41:33
la tarifa de transacción y qué es u
48:34
nodes even bother to compete in this
48:37
block creation process and this is what
48:39
is known as Bitcoin mining basically the
48:41
process of repeatedly trying and solving
48:43
these hash puzzles and we call these
48:45
nodes miners and because of how capital
48:49
incentive this process is this goes back
48:51
to what I said at the beginning that
48:52
even though technically anybody can be a
48:54
miner there's been a lot of
48:56
concentration of power or concentration
48:58
of participation in the mining ecosystem
49:01
so that's the first property of these
49:04
proof-of-work puzzles
49:07
the second property is that we want this
49:10
cost to be parameterize Abul it's not a
49:12
cost that that is fixed over all time
49:14
and the way that that's accomplished is
49:16
that all the nodes in the Bitcoin
49:17
peer-to-peer network will automatically
49:20
recalculate the target that is the size
49:22
of the target space as a fraction of the
49:25
output space every two weeks and they do
49:27
it in such a way that they maintain this
49:29
invariant which is that the average time
49:32
between any two successive walks produce
49:34
globally in the overall Bitcoin network
49:37
is about ten minutes so let's think
49:40
about what this means what this means is
49:43
that if you're a miner and you've
49:44
invested a certain fixed amount of
49:46
hardware into Bitcoin mining but the
49:50
overall mining ecosystem is growing more
49:52
miners are coming in where they're
49:54
deploying faster and faster hardware
49:55
that means that over a two-week period
49:58
slightly more blocks are going to be
50:00
found and expected and so nodes will
50:03
automatically readjust the target and so
50:06
the amount of work that you have to do
50:08
to be able to find a block is going to
50:10
increase so if you put in a fixed amount
50:12
of hardware investments the rate at
50:15
which you find blocks is actually
50:17
dependent upon what other miners are
50:19
doing so there's a very nice formula to
50:21
capture this which is that the
50:23
probability that any given miner alice
50:25
is going to win the next block is
50:27
equivalent to the fraction of global
50:30
hash power that she controls which means
50:33
that if she has mining Hardware that's
50:35
about 0.1 percent of total hash power
50:38
she will compute roughly one in every
50:40
thousand blocks so why does this
50:43
readjustment happen why do we want this
50:45
want to maintain this ten-minute
50:46
invariant well the reason is simple if
50:49
walks were to come very close together
50:51
then there would be a lot of
50:53
inefficiency and we would lose the
50:55
optimization benefits of being able to
50:57
put a lot of transactions as it
50:59
currently stands several hundred
51:01
transactions in a single block if you
51:03
went down from ten minutes to five
51:04
minutes it would probably be okay
51:06
and there are a lot of discussions about
51:07
if we're doing an altcoin now what is
51:10
the block latency that we should have
51:12
but everybody agrees that the block
51:14
latency should be a fixed amount it
51:16
cannot be allowed to go down without
51:18
and that's why you have this automatic
51:21
target recalculation property now
51:26
because of the way that this cost
51:29
function and proof-of-work is set up it
51:31
allows us to reformulate our security
51:34
assumption here's where we finally
51:36
depart from the leap of faith that I
51:37
asked you to take several slides ago
51:39
instead of saying that somehow the
51:41
majority of nodes are honest in a
51:44
context where nodes don't even have
51:45
identities and not being clear about
51:47
what that means we can now state crisply
51:49
that a lot of attacks on Bitcoin are
51:51
infeasible if the majority of miners
51:54
waited by hash power are following the
51:56
protocol or are honest and the reason
51:59
for that is if a majority of miners
52:01
waited by hash power or honest because
52:03
of this competition for proposing the
52:05
next block this will automatically
52:07
ensure that there is at least a 50%
52:09
chance that the next block to be
52:11
proposed at any point is coming from an
52:13
honest node instead of a malicious one
52:17
let's now look at the consequences of
52:20
the fact that solving hash puzzles is
52:23
probabilistic why is it probabilistic
52:25
because nobody can predict which nons is
52:28
going to result in solving the hash
52:30
puzzle the only way to do it is to try
52:32
nonsense one by one and hope that one
52:34
succeeds right and so this process is
52:37
called mathematically Bernoulli trials I
52:40
want to I won't go into detail on that
52:41
but you can look it up but typically
52:44
nodes try so many nonces that a discrete
52:48
probability process called Bernoulli
52:50
trials can be well approximated by a
52:52
continuous probability process called a
52:55
Poisson process and the end result of
52:59
all of that is that the distribution the
53:02
probability density function of the time
53:05
to find the next block by any node in
53:07
the network globally looks something
53:09
like this it's called an exponential
53:11
distribution but really the upshot is
53:13
that there is some small probability
53:14
that if a block has been found now the
53:17
next block is going to be found very
53:18
soon or within a few seconds or within a
53:20
minute and there's also some small
53:23
probability that it will take a long
53:25
time maybe an hour to find the next
53:27
block but overall the network
53:29
automatically adjust the difficulty so
53:31
that
53:32
the inter blog time is maintained at an
53:34
average long-term of 10 minutes right so
53:39
this is a graph that shows how
53:41
frequently blocks are going to be
53:43
created by the entire network not caring
53:45
about which minor this is coming from if
53:48
you're a minor specifically interested
53:50
in how quickly you're finding blocks
53:52
what does this probability density
53:54
function look like well it's going to
53:55
have the same shape but it's just going
53:58
to have a different scale on the x-axis
53:59
again it can be represented by a nice
54:02
equation for a specific minor the mean
54:05
time to find a block given that you've
54:07
just found a block is going to be ten
54:09
minutes divided by the fraction of hash
54:12
power that you control so again if you
54:14
have 0.1% of the total network hash
54:16
power you're going to find blocks once
54:18
every 10,000 minutes which is several
54:21
days and so not only is your mean time
54:24
between blocks going to be very high the
54:26
variance of the time between blocks
54:27
found by you is also going to be very
54:29
high and this has some important
54:31
consequences that we're going to be
54:33
looking at in later lectures so now
54:36
let's turn to the third important
54:38
probability of this proof-of-work
54:40
function which is that it's actually a
54:42
trivial to verify that in a node has
54:45
computed proof-of-work correctly what
54:47
does that mean even if it takes a node
54:49
on average 10 to the 20 tries to find a
54:53
nonce that succeeds in finding the right
54:57
property of the hash function that nonce
54:59
must be published as part of the block
55:01
so it's trivial for any other node to
55:04
look at the block contents hash them all
55:06
together and verify that the output is
55:09
less than the target so this is an
55:12
important property because once again it
55:14
allows you to get rid of centralization
55:15
you don't need any centralized Authority
55:18
verifying that miners are doing their
55:20
job correctly any node or any miner can
55:23
instantly verify that a block found by
55:26
another miner satisfies this proof of
55:28
work property and thereby they can be
55:30
sure that this miner put in a lot of
55:32
computing power into finding that block
55:39
let's now look at mining economics
55:42
because we've said that it's quite
55:43
expensive for miners to be an operation
55:46
because finding a single block takes
55:48
computing about ten to the twenty hashes
55:50
at the same time we've also seen that
55:52
the block reward is about 25 bitcoins
55:54
which is quite a lot of money so it
55:56
really boils down to an economics
55:57
question of whether or not it's
55:59
profitable for a miner to mine but we
56:02
can write down a simple equation that
56:04
represents what does what the inputs
56:07
into this decision are fundamentally the
56:09
mining reward that the miner gets is in
56:11
terms of the block reward and
56:13
transaction fees the miner asks himself
56:15
whether that's bigger than or less than
56:17
their total expenditure which is the
56:19
hardware and electricity cost in fact
56:21
Bitcoin mining is so expensive in terms
56:23
of electricity that that becomes a
56:25
significant portion of the cost and not
56:27
just the upfront cost of the hardware
56:28
and if the rewards are greater than the
56:31
costs and the Minor Prophets if not the
56:33
miner incurs loss but there are some
56:36
complications to this simple equation
56:37
the first is that as you may have
56:39
noticed the hardware cost is a fixed
56:41
cost it's an upfront cost whereas the
56:43
electricity cost is a variable cost that
56:46
is incurred over time another
56:49
complication is that remember that a
56:51
reward that the miner gets depends upon
56:53
the rate at which they find blocks which
56:55
depends on not just the power of their
56:57
hardware but in fact more accurately as
56:59
the ratio of the power of their hardware
57:02
as a fraction of the total global hash
57:04
rate so that makes it more complicated
57:07
as well another complication is note
57:11
that the costs that the miner incurs are
57:13
in terms of dollars or whatever currency
57:15
that they're using whereas they're
57:18
rewarded in terms of bitcoins that are
57:19
created or bitcoins that are transaction
57:22
fees so this equation is really going to
57:25
depend on what the exchange rate of
57:26
Bitcoin is doing at any given time and
57:29
finally so far we've assumed that the
57:31
miner is interested in honestly
57:33
following the protocol but it could be
57:35
the case that the miner could deploy
57:36
some other mining strategy instead of
57:38
always finding the next block that
57:41
extends the longest valid branch and so
57:44
this equation doesn't capture all the
57:47
nuances of the different strategies of
57:49
the miner
57:49
employ so even though we can write down
57:51
the simple equation actually analyzing
57:53
what it makes sense for miners to do as
57:55
a complicated game theory problem and we
57:58
don't have simple answers to that okay
58:00
so now we've obtained a pretty good
58:02
understanding of how Bitcoin achieves
58:04
decentralization let's put it all
58:06
together now and do a little bit of a
58:08
recap and understand some high-level
58:10
points in order to get an even better
58:11
understanding so what I'm going to do is
58:15
I'm going to do a very quick recap of
58:17
several of the major aspects of Bitcoin
58:19
that we've learned so far let's start
58:22
from identities as we've learned there
58:24
are no real-world identities required to
58:26
participate in the Bitcoin protocol any
58:27
user can create a pseudonymous key pair
58:30
at any moment any number of them and
58:33
when Alice and Bob want to make a
58:35
transaction when Alice for example wants
58:37
to know what address Bob wants to get
58:39
paid at that's not part of the Bitcoin
58:41
protocol that needs to be through some
58:44
other process for example on Bob the
58:46
merchants website so given these
58:49
pseudonymous key pairs as identities
58:52
transactions are basically messages that
58:56
are broadcast to the Bitcoin
58:57
peer-to-peer network that are
58:59
instructions to transfer a coin from one
59:04
address to another and the coin really
59:06
is just a tree and chain of transactions
59:08
to the extent that we can call anything
59:10
in Bitcoin an actual coin and this is
59:12
something we'll see in much more detail
59:14
in future lectures and so this
59:16
peer-to-peer network that we have looked
59:18
at its goal is to propagate all new
59:22
transactions to all the Bitcoin peer
59:24
nodes as well as new blocks to the
59:26
Bitcoin peer nodes but it's just going
59:28
to do sort of the best effort that it
59:30
can the real security of the system
59:32
doesn't come from the perfection of the
59:34
peer-to-peer network in fact the
59:35
underlying assumption that the network
59:37
is in fact quite unreliable but instead
59:40
where the security comes from is from
59:42
the blockchain and the consensus
59:44
protocol that we spent a lot of time
59:46
looking at so what it means for your
59:49
transaction to be in the blockchain is
59:51
that it achieves a lot of confirmations
59:53
it's not a fixed number six is a
59:56
commonly used heuristic but the more
59:58
confirmations your transaction is
60:00
received the more blocks
60:02
found that extend the block that
60:04
contained your transaction the more
60:06
certain you can be that your transaction
60:07
was part of the consensus change and now
60:10
often there are going to be a variety of
60:12
orphan blocks these are blocks that
60:15
don't make it into the consensus chain
60:17
this could represent an invalid
60:19
transaction or a double spent attempt it
60:21
could simply represent the fact that
60:23
there is latency in the network and two
60:25
miners competing to solve this
60:27
proof-of-work puzzle simply ended up
60:29
finding new blocks within just a few
60:32
seconds of each other and so both of
60:34
these blocks were broadcast nearly
60:36
simultaneously onto the network so
60:39
another subtle point here is that if
60:41
Alice and Bob are two different miners
60:42
and Alice has hundred times as much
60:44
computing power is Bob what that means
60:47
is not that Alice will always win the
60:49
race against Bob to find the next block
60:51
but instead Alice and Bob have a ratio a
60:55
probability ratio of finding the next
60:56
block and the proportion hundred to one
60:58
so in the long term Bob will find an
61:02
average one percent of the blocks that
61:03
Alice does so those are some of the
61:06
basics of block shade and consensus and
61:08
where the security of the system really
61:10
comes from and finally we looked at hash
61:12
puzzles in mining miners are special
61:14
type of nodes that bother to compete in
61:17
this game of creating new blocks and
61:19
they're rewarded for their efforts in
61:21
terms of bitcoins and we expect that
61:23
miners are going to be typically
61:25
somewhere near the economic equilibrium
61:26
of the expenditure that they incur in
61:29
terms of hardware and electricity being
61:31
somewhere equal to the rewards that they
61:36
obtain in terms of the new block
61:37
creation reward and the transaction fee
61:39
based rewards so that's a broad recap of
61:43
the system let me show you an appointed
61:46
way how deeply this notion of
61:48
distributed consensus permeates Bitcoin
61:50
now in a traditional currency there is
61:54
consensus does come into play in a
61:56
certain limited extent which is we have
61:58
a consensus process around what is the
62:01
exchange rate of the currency you can
62:02
make a rough analogy to consensus and
62:04
distributed systems and that is
62:06
certainly true in Bitcoin as well we
62:09
need consensus around the value of the
62:11
exchange rate of Bitcoin but consensus
62:13
goes much deeper and bit
62:15
coin than another say fiat currencies in
62:17
fact you need consensus around state
62:20
which is what the blockchain
62:21
accomplishes that is a record of which
62:23
transactions are valid or which
62:24
transactions have even happened so even
62:27
the idea of how many bitcoins you own is
62:30
subject to consensus what it means when
62:33
I say I own a certain amount or number
62:35
of bitcoins is that I mean that the
62:38
Bitcoin peer-to-peer network as recorded
62:41
in the blockchain considers me the sum
62:44
total of all my addresses to own a
62:46
certain number of bitcoins that is sort
62:48
of the ultimate nature of truth in
62:49
Bitcoin so ownership of bitcoins is
62:51
nothing more than other nodes thinking
62:54
that I own a certain number of bitcoins
62:56
and finally we need consensus about the
62:59
rules of the system because occasionally
63:01
the rules of the system have to change
63:03
there are things called hot soft Forks
63:05
and hard Forks and we're going to see a
63:07
little bit more detail of this in later
63:09
lectures now I want to show you another
63:14
subtle idea which is very tricky and
63:16
it's this very neat idea of
63:19
bootstrapping that I really found
63:21
intriguing the first time I encountered
63:22
it and so I want to share this with you
63:24
so what do I mean by bootstrapping I
63:27
mean the tricky interplay between three
63:29
things in Bitcoin and what are these
63:31
three things let's start from the notion
63:33
of security of the blockchain so
63:35
obviously we want the blockchain to be
63:38
secure for Bitcoin to have to be a
63:40
viable currency but what is necessary
63:43
for for the blockchain to be secure what
63:46
this means is that an adversary
63:48
shouldn't be able to overwhelm the
63:50
consensus process shouldn't be able to
63:52
create a lot of nodes and take over 50%
63:55
or more of the new block creation but
63:58
when will that be true what is it
64:00
prerequisite for that a prerequisite for
64:02
that is having a healthy mining
64:04
ecosystem made up of largely honest
64:08
protocol following notes so that's a
64:10
prerequisite for security of the
64:11
blockchain but what's a prerequisite for
64:14
that when can we be sure that a lot of
64:16
miners will put a lot of computing power
64:18
into participating in this hash
64:21
puzzle-solving competition well they're
64:23
only going to do that if the exchange
64:24
rate of Bitcoin is pretty high why is
64:28
that because
64:29
they receive rewards denominated in
64:31
bitcoins whereas their expenditures and
64:32
dollars so the more the value of the
64:34
currency goes up the more incentivize
64:36
these miners are going to be but what
64:39
ensures a high and stable value of the
64:42
currency that can only happen if users
64:45
in general people who want to buy
64:47
bitcoins have trust in the security of
64:49
the blockchain because if they believe
64:51
that the network could be overwhelmed at
64:53
any moment by an attacker then bitcoin
64:55
is not going to have a lot of values
64:57
occurrence II so you have this
64:59
interlocking interdependence between
65:01
these three things all right so the
65:03
existence of each of these is predicated
65:05
on the existence of another so one might
65:09
flip that around and imagine at the
65:11
beginning at during bitcoins creation
65:13
when none of these three things existed
65:15
when there were no miners other than
65:17
what we believe to be Nakamoto himself
65:21
or whoever the Creator was running the
65:23
mining software and when Bitcoin didn't
65:26
have a lot of value as a currency and
65:28
when the blockchain was in fact insecure
65:30
because there was not a lot of mining
65:31
going on and so anybody could easily
65:33
overwhelm this process how do you go
65:35
from there not having any of these three
65:37
properties to going all three to having
65:40
all three of them and that is what I
65:42
mean by bootstrapping and it's this very
65:44
tricky process of how all of these three
65:47
characteristics were acquired by the
65:49
Bitcoin system in an interdependent
65:51
manner with each other and this was of
65:53
course fueled by a lot of media
65:56
attention as well because the more
65:57
people hear about Bitcoin the more
65:59
they're going to get interested in
66:00
mining and the more they get interested
66:02
in mining the more confidence people
66:04
will have in the security of the
66:05
blockchain because there's now more
66:07
mining activity going on and so on and
66:09
so forth and so Bitcoin went from having
66:13
none of these properties to now having
66:14
in some large measure all three of these
66:17
properties and that's the interesting
66:19
bootstrapping feature of Bitcoin and
66:20
every new alts coin that wants to
66:22
succeed also has to somehow solve this
66:26
problem of pulling itself up by its
66:28
bootstraps okay let me leave you now
66:32
with one final thing which is that in
66:35
order to understand our consensus and
66:38
what its responsible for and what it's
66:40
not responsible for a
66:42
way to do that is to ask ourselves what
66:45
would happen if consensus failed and
66:47
there were in fact a 51% attacker
66:49
somehow who controls 51% or more of the
66:53
mining power in the Bitcoin network so
66:56
let's see what happens in that case and
66:57
let's list a whole variety of things
67:00
possible bad things that we think might
67:03
happen and let's ask ourselves which of
67:05
these are possible for a 51% attacker
67:08
first of all can this attacker steal
67:11
coins from an existing address
67:13
well you might guess that the answer is
67:15
no because stealing from an existing
67:17
address is not possible unless you
67:18
subvert the cryptography it's not enough
67:20
to subvert the consensus process this is
67:23
a bit tricky let's follow through this
67:25
line of argument let's say that this 51%
67:28
attacker creates an invalid block that
67:31
contains an invalid transaction that
67:32
represents stealing bitcoins from an
67:35
existing address that the attacker
67:36
doesn't control and transferring them to
67:38
his own address
67:39
now this attacker can pretend that
67:42
that's a valid transaction and pretend
67:43
that that's a valid block and keep
67:45
building upon this block and even
67:47
succeed in making that the the longest
67:51
branch but the other honest nodes are
67:53
simply not going to accept this invalid
67:56
block and are going to keep mining based
67:58
on the last valid block that they found
68:00
in the network so what will happen is
68:02
that there will be what we call a fork
68:05
in the chain now imagine this from the
68:07
point of view of the attacker trying to
68:09
spend these invalid coins and send them
68:12
to some merchants Bob and buy something
68:14
in exchange now Bob will presumably be
68:16
running a Bitcoin node himself and that
68:18
will be an honest node and that node is
68:20
going to say oh this might be the
68:21
longest branch but it's not a valid
68:23
branch because it contains an invalid
68:25
transaction because the crypto the
68:27
signatures doesn't check out and so it's
68:29
going to simply ignore this longest
68:31
branch because it's an invalid branch
68:33
and because of that subverting consensus
68:36
is not enough you have to subvert
68:37
cryptography in to steal coins from an
68:39
existing address so we conclude that
68:41
this attack is not possible for a 51%
68:43
attacker by the way in saying all of
68:47
this I should note that this is all
68:48
somewhat hypothetical somewhat a thought
68:50
experiment because if there were in fact
68:52
actual signs of a 51% attack
68:55
it will probably happen is that the
68:57
developers will notice this and will try
68:59
to react to it and we'll update the
69:01
Bitcoin software and we might expect
69:03
that the rules of the system of the p2p
69:05
network might change in some form to
69:08
make this attack more difficult to
69:10
launch but we can't quite predict that
69:12
so we're working in a simplified model
69:13
where 51% attack happens but other than
69:16
that there are no changes or tweaks to
69:18
the rules of the system okay let's move
69:21
on
69:22
can the attackers suppress some
69:23
transactions let's say there is some
69:25
user say Carol whom the attacker really
69:28
doesn't like and the attacker knows some
69:30
of Carol's addresses and wants to make
69:32
sure that no coins belonging to any of
69:34
those addresses can possibly be spent is
69:37
that possible well let's think about
69:40
this
69:40
the attacker since he controls the
69:44
consensus process of the blockchain can
69:47
simply refuse to create any new blocks
69:50
that contain transactions from that from
69:53
one of Carol's addresses and can in fact
69:55
also refuse to build upon blocks that
69:57
contain such transactions and the
69:59
attacker will be successful at that
70:01
however the attacker cannot prevent
70:04
these transactions from even broadcast
70:07
to the peer-to-peer network because the
70:09
peer-to-peer network doesn't depend on
70:11
the blockchain doesn't depend on
70:12
consensus and we're assuming that the
70:14
attacker doesn't fully control the
70:15
network so the transactions are still
70:17
going to find a way to reach the
70:19
majority of notes so even if the
70:21
attacker tries this attack it will be
70:23
very clear that that attack is happening
70:25
because the peer-to-peer network will
70:27
still receive these transactions okay
70:31
what about this one can the attacker
70:32
change the block reward can the attacker
70:34
start pretending that the block reward
70:36
is instead of 25 bitcoins 100 bitcoins
70:39
or something like that well this sort of
70:41
corresponds to changing the rules of the
70:43
system and because of a reasoning
70:45
similar to what we applied for stealing
70:47
bitcoins from an existing address this
70:49
is also not possible because the
70:51
attacker doesn't control the copies of
70:54
the Bitcoin software that all of the
70:56
honest nodes are running so that's also
70:58
not possible finally let's ask ourselves
71:01
if the attacker can somehow destroy
71:02
confidence in Bitcoin well let's imagine
71:05
what would happen if there were
71:08
variety of double spending temps and not
71:12
at behavior of not extending the longest
71:14
valid branch and others had she
71:16
attempted attacks then people are going
71:18
to look at this and decide that bitcoin
71:21
is no longer acting as a decentralized
71:23
ledger that they can trust and so people
71:25
will simply lose confidence in the
71:27
currency and we might expect that the
71:29
exchange rate of Bitcoin is going to
71:30
plummet in fact if there is a 51%
71:33
attacker and this is known even if the
71:36
attacker is not necessarily trying to
71:37
launch any attacks it's possible that
71:39
this might happen
71:40
so this we can classify as not only
71:42
possible but in fact likely that a 51%
71:45
attack of any sort will simply destroy
71:47
confidence in the currency and this last
71:49
one is in fact the main practical threat
71:51
if a 51% attack were ever to materialize
71:54
none of these others really considering
71:57
the amount of expenditure that the
72:00
adversary would have to put into
72:01
attacking Bitcoin and achieving a 51%
72:03
majority really makes sense from a
72:05
financial point of view to try any of
72:07
these other attacks great so now
72:10
hopefully you've obtained a really good
72:13
understanding of how decentralization is
72:15
achieved in Bitcoin and I'm just stood
72:17
identities understood transactions
72:19
understood the peer-to-peer network
72:20
understood the blockchain and consensus
72:23
understand hash puzzles and mining so
72:25
you should be in a really good point now
72:26
and a good launching point for
72:28
understanding a lot more of the subtle
72:29
details and nuances of Bitcoin which
72:32
we're going to start seeing in the next
72:33
few lectures so the next lecture is
72:35
going to be by Joe Bono
72:37
where he will address a lot of questions
72:39
that take off from the point where we
72:42
have left off in this lecture the first
72:44
is how do we get from consensus to
72:46
currency so this is an assumption that
72:48
I've already made in this lecture not
72:50
only are we solving a distributed
72:52
consensus problem but also we're
72:53
treating the result of distributed
72:55
consensus as the currency now in order
72:57
to incentivize participants but a lot of
73:00
details are are missing what exactly
73:02
does it mean to be paid in Bitcoin how
73:04
does that happen
73:05
how are those transactions represented
73:07
and so on we're going to look at that
73:08
we're going to look at what else can we
73:10
do with consensus I hinted at this a
73:12
little bit but it turns out that Bitcoin
73:15
offers a lot in addition to just doing
73:16
consensus it has a whole scripting
73:18
language so there are a lot of
73:20
interesting things to see there and so
73:22
Joe is going to take it from there in
73:23
the next lecture thank you
73:37
you




